package ${g.codePackage}.resource;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.ly.education.commons.entity.Result;
import com.ly.spring.boot.pagehelper.dto.PageQueryParam;
import ${g.codePackage}.dto.${t.name}Dto;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;

/**
 * ${t.chinaName}
 * @author ${g.author}
 *
 */
@Api(tags="${t.chinaName}")
@RequestMapping("/${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}")
public interface ${t.name}Resource {
    
    @ApiOperation("添加${t.chinaName}")
    @RequestMapping(value = "/create", method = RequestMethod.POST)
    Result<?> create(@ApiParam(value = "${t.chinaName}", required = true) ${t.name}Dto ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto);

    @ApiOperation("分页查询${t.chinaName}")
    @RequestMapping(value = "/query", method=RequestMethod.POST)
    Result<?> query(@ApiParam(value = "分页查询${t.chinaName}传输对象", required = false) PageQueryParam<${t.name}Dto> pageQueryParam);
    
    @ApiOperation("更新${t.chinaName}")
    @RequestMapping(value = "/update", method = RequestMethod.POST)
    Result<?> update(@ApiParam(value = "${t.chinaName}", required = true) ${t.name}Dto ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto);

    @ApiOperation("删除${t.chinaName}")
    @RequestMapping(value="/delete", method = RequestMethod.POST)
    Result<?> delete(@ApiParam(value = "${t.idName}s", required = true) ${t.idType}[] ${t.idName}s);
    
    @ApiOperation("${t.chinaName}详情")
    @RequestMapping(value = "/detail/{${t.idName}}", method=RequestMethod.GET)
    Result<?> detail(@ApiParam(value = "${t.idName}", required = true) ${t.idType} ${t.idName});
    
}

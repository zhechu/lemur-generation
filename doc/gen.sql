/*
Navicat MySQL Data Transfer

Source Server         : me
Source Server Version : 50626
Source Host           : localhost:3306
Source Database       : code_gen

Target Server Type    : MYSQL
Target Server Version : 50626
File Encoding         : 65001

Date: 2019-04-17 23:16:06
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for t_code_dbinfo
-- ----------------------------
DROP TABLE IF EXISTS `t_code_dbinfo`;
CREATE TABLE `t_code_dbinfo` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ALIAS` varchar(20) DEFAULT NULL,
  `DB_DRIVER` varchar(100) NOT NULL COMMENT '数据库驱动',
  `DB_URL` varchar(200) NOT NULL COMMENT '数据库地址',
  `DB_USER_NAME` varchar(100) NOT NULL COMMENT '数据库账户',
  `DB_PASSWORD` varchar(100) NOT NULL COMMENT '连接密码',
  `USER_ID` varchar(32) DEFAULT NULL,
  `DB_TYPE` varchar(10) DEFAULT NULL COMMENT '数据库类型',
  `CRT_USER_ID` varchar(16) DEFAULT NULL COMMENT '创建人',
  `CRT_TIME` datetime DEFAULT NULL COMMENT '创建时间',
  `MDF_USER_ID` varchar(16) DEFAULT NULL COMMENT '修改人',
  `MDF_TIME` datetime DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`ID`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='数据库链接信息';

-- ----------------------------
-- Records of t_code_dbinfo
-- ----------------------------
INSERT INTO `t_code_dbinfo` VALUES ('4', 'localhost', 'com.mysql.jdbc.Driver', 'jdbc:mysql://localhost:3306/jfinal_demo', 'root', '123456', '78', 'mysql', '78', '2017-10-06 13:57:31', '78', '2017-10-06 14:00:13');
INSERT INTO `t_code_dbinfo` VALUES ('12', '代码生成系统开发环境', 'com.mysql.jdbc.Driver', 'jdbc:mysql://127.0.0.1:3306/code_gen?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull', 'root', '123456', '1', 'mysql', '1', '2018-05-17 10:00:01', '1', '2019-04-17 21:33:04');
INSERT INTO `t_code_dbinfo` VALUES ('13', '测试环境', 'oracle.jdbc.driver.OracleDriver', 'jdbc:oracle:thin:@127.0.0.1:1521:orcl', 'sys as sysdba', '123456', '1', 'oracle', '1', '2019-04-17 21:38:28', null, null);
INSERT INTO `t_code_dbinfo` VALUES ('14', '开发环境', 'oracle.jdbc.driver.OracleDriver', 'jdbc:oracle:thin:@127.0.0.1:1521:orcl', 'sys as sysdba', '123456', '1', 'oracle', '1', '2019-04-17 22:25:41', null, null);

-- ----------------------------
-- Table structure for t_code_gen_params
-- ----------------------------
DROP TABLE IF EXISTS `t_code_gen_params`;
CREATE TABLE `t_code_gen_params` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `ALIAS` varchar(50) DEFAULT NULL,
  `author` varchar(50) DEFAULT NULL,
  `code_package` varchar(100) NOT NULL COMMENT 'code 包',
  `xml_package` varchar(100) DEFAULT NULL COMMENT 'xml 路径',
  `js_package` varchar(100) DEFAULT NULL COMMENT 'js 目录',
  `html_package` varchar(100) DEFAULT NULL COMMENT 'html 目录',
  `local_path` varchar(100) DEFAULT NULL COMMENT '本地路径',
  `encoded` varchar(10) DEFAULT NULL COMMENT '编码',
  `copyright` varchar(2000) DEFAULT NULL COMMENT '版权信息',
  `user_id` int(10) NOT NULL,
  `CRT_USER_ID` int(16) DEFAULT NULL COMMENT '创建人',
  `CRT_TIME` datetime DEFAULT NULL COMMENT '创建时间',
  `MDF_USER_ID` int(16) DEFAULT NULL COMMENT '修改人',
  `MDF_TIME` datetime DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='生成参数';

-- ----------------------------
-- Records of t_code_gen_params
-- ----------------------------
INSERT INTO `t_code_gen_params` VALUES ('15', '公共服务管理', 'lingyuwang', 'com.wise.common', null, null, null, null, 'UTF-8', null, '1', '1', '2019-04-17 22:33:38', null, null);

-- ----------------------------
-- Table structure for t_code_table_base_field
-- ----------------------------
DROP TABLE IF EXISTS `t_code_table_base_field`;
CREATE TABLE `t_code_table_base_field` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `user_id` int(10) DEFAULT NULL COMMENT '用户ID',
  `name` varchar(10) NOT NULL COMMENT '基础字段组名称',
  `desc` varchar(400) DEFAULT NULL COMMENT '描述',
  `CRT_USER_ID` varchar(16) DEFAULT NULL COMMENT '创建人',
  `CRT_TIME` datetime DEFAULT NULL COMMENT '创建时间',
  `MDF_USER_ID` varchar(16) DEFAULT NULL COMMENT '修改人',
  `MDF_TIME` datetime DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='项目基础字段';

-- ----------------------------
-- Records of t_code_table_base_field
-- ----------------------------

-- ----------------------------
-- Table structure for t_code_table_field
-- ----------------------------
DROP TABLE IF EXISTS `t_code_table_field`;
CREATE TABLE `t_code_table_field` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `table_id` int(10) NOT NULL COMMENT '关联表ID',
  `field_name` varchar(100) NOT NULL COMMENT '列名',
  `name` varchar(100) NOT NULL COMMENT '名称',
  `content` varchar(200) DEFAULT NULL COMMENT '功能',
  `type` varchar(20) NOT NULL COMMENT '类型',
  `is_key` varchar(2) DEFAULT NULL COMMENT '是否主键',
  `is_null` varchar(5) DEFAULT NULL COMMENT '是否可以为空',
  `is_show_add` int(1) DEFAULT '1' COMMENT '是否显示新增',
  `is_show_edit` int(1) DEFAULT '1' COMMENT '是否显示编辑',
  `is_show_detail` int(1) DEFAULT '1' COMMENT '是否显示详情',
  `is_show_list` int(1) DEFAULT '1' COMMENT '是否列表显示',
  `is_import` int(1) DEFAULT '1' COMMENT '是否Excel导入',
  `is_export` int(1) DEFAULT '1' COMMENT '是否导出Excel',
  `is_query` int(1) DEFAULT '1' COMMENT '是否查询',
  `query_mode` varchar(10) DEFAULT NULL COMMENT '查询类型',
  `show_type` varchar(10) DEFAULT NULL COMMENT '显示类型',
  `order_num` int(11) DEFAULT NULL COMMENT '排序',
  `dict_name` varchar(100) DEFAULT NULL COMMENT '字段名称',
  `dict_type` int(1) DEFAULT NULL COMMENT '字段类型 1 枚举 2 字段 3 列表',
  `jdbc_type` varchar(20) DEFAULT NULL COMMENT 'jdbc类型',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1672 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='字段对应关系';

-- ----------------------------
-- Records of t_code_table_field
-- ----------------------------
INSERT INTO `t_code_table_field` VALUES ('1670', '114', 'ID', 'id', '主键', 'java.lang.Integer', '2', null, '1', '1', '1', null, '1', '1', null, '1', '1', null, '', '1', 'NUMERIC');
INSERT INTO `t_code_table_field` VALUES ('1671', '114', 'NAME', 'name', '名称', 'java.lang.String', null, null, '1', '1', '1', null, '1', '1', null, '1', '1', null, '', '1', 'VARCHAR');

-- ----------------------------
-- Table structure for t_code_table_field_dbinfo
-- ----------------------------
DROP TABLE IF EXISTS `t_code_table_field_dbinfo`;
CREATE TABLE `t_code_table_field_dbinfo` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `field_id` int(10) NOT NULL COMMENT '字段ID',
  `field_name` varchar(100) CHARACTER SET utf8 NOT NULL COMMENT '列名',
  `field_default` varchar(20) CHARACTER SET utf8 DEFAULT NULL COMMENT '字段默认值',
  `field_content` varchar(200) CHARACTER SET utf8 DEFAULT NULL COMMENT ' 字段注释',
  `field_length` int(11) DEFAULT NULL COMMENT '字段长度',
  `field_type` varchar(10) CHARACTER SET utf8 DEFAULT NULL COMMENT '字段类型',
  `field_point_length` int(11) DEFAULT NULL COMMENT '小数点位数',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `un_field_id` (`field_id`) USING BTREE COMMENT '字段 Id'
) ENGINE=InnoDB AUTO_INCREMENT=1649 DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT COMMENT='字段的数据库信息';

-- ----------------------------
-- Records of t_code_table_field_dbinfo
-- ----------------------------
INSERT INTO `t_code_table_field_dbinfo` VALUES ('1647', '1670', 'ID', '', '', '0', 'NUMBER', '0');
INSERT INTO `t_code_table_field_dbinfo` VALUES ('1648', '1671', 'NAME', '', '', '255', 'VARCHAR2', '0');

-- ----------------------------
-- Table structure for t_code_table_field_verification
-- ----------------------------
DROP TABLE IF EXISTS `t_code_table_field_verification`;
CREATE TABLE `t_code_table_field_verification` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `field_id` int(10) NOT NULL COMMENT '字段ID',
  `view_verification` int(1) DEFAULT NULL COMMENT '前端校验',
  `server_verification` int(1) DEFAULT NULL COMMENT '后台校验',
  `not_null` int(1) DEFAULT NULL COMMENT '允许空',
  `min_num` varchar(5) DEFAULT NULL COMMENT '最小',
  `max_num` varchar(10) DEFAULT NULL COMMENT '最大',
  `regex` varchar(100) DEFAULT NULL COMMENT '正则',
  `regex_type` int(2) DEFAULT NULL COMMENT '正则类型',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `un_field_id` (`field_id`) USING BTREE COMMENT '字段 Id'
) ENGINE=InnoDB AUTO_INCREMENT=1650 DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT COMMENT='字段校验规则';

-- ----------------------------
-- Records of t_code_table_field_verification
-- ----------------------------
INSERT INTO `t_code_table_field_verification` VALUES ('1648', '1670', '2', '2', '1', '', '', '', '0');
INSERT INTO `t_code_table_field_verification` VALUES ('1649', '1671', '2', '2', '2', '', '', '', '0');

-- ----------------------------
-- Table structure for t_code_table_head
-- ----------------------------
DROP TABLE IF EXISTS `t_code_table_head`;
CREATE TABLE `t_code_table_head` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(10) DEFAULT NULL COMMENT '所属用户',
  `table_name` varchar(50) NOT NULL COMMENT '表名',
  `class_name` varchar(50) DEFAULT NULL,
  `content` varchar(200) NOT NULL COMMENT '表名称',
  `is_import` int(1) DEFAULT NULL COMMENT '是否导入Excel',
  `is_export` int(1) DEFAULT NULL COMMENT '是否导出Excel',
  `is_pagination` int(1) DEFAULT NULL COMMENT '是否分页',
  `is_log` int(1) DEFAULT NULL COMMENT '是否添加日志',
  `is_protocol` int(1) DEFAULT NULL COMMENT '是否添加协议',
  `CRT_USER_ID` int(16) DEFAULT NULL COMMENT '创建人',
  `CRT_TIME` datetime DEFAULT NULL COMMENT '创建时间',
  `MDF_USER_ID` int(16) DEFAULT NULL COMMENT '修改人',
  `MDF_TIME` datetime DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=115 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='表单管理';

-- ----------------------------
-- Records of t_code_table_head
-- ----------------------------
INSERT INTO `t_code_table_head` VALUES ('114', '1', 'TEST', 'Test', '测试实体', null, null, null, null, null, '1', '2019-04-17 22:46:45', '1', '2019-04-17 22:50:58');

-- ----------------------------
-- Table structure for t_code_table_service_config
-- ----------------------------
DROP TABLE IF EXISTS `t_code_table_service_config`;
CREATE TABLE `t_code_table_service_config` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `table_id` int(10) NOT NULL COMMENT '对应表',
  `type` varchar(10) NOT NULL COMMENT '功能 ',
  `is_enable` int(1) DEFAULT NULL COMMENT '是否启用改功能',
  `is_permission` int(1) DEFAULT NULL COMMENT '是否需要授权',
  `is_transactional` int(1) DEFAULT NULL COMMENT '是否开启事务',
  `transactional_type` varchar(2) DEFAULT NULL COMMENT '事务类型',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=606 DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT COMMENT='表功能配置';

-- ----------------------------
-- Records of t_code_table_service_config
-- ----------------------------
INSERT INTO `t_code_table_service_config` VALUES ('601', '114', 'list', '1', '1', '2', '02');
INSERT INTO `t_code_table_service_config` VALUES ('602', '114', 'add', '1', '1', '1', '01');
INSERT INTO `t_code_table_service_config` VALUES ('603', '114', 'edit', '1', '1', '1', '01');
INSERT INTO `t_code_table_service_config` VALUES ('604', '114', 'delete', '1', '1', '1', '01');
INSERT INTO `t_code_table_service_config` VALUES ('605', '114', 'detail', '1', '1', '2', '02');

-- ----------------------------
-- Table structure for t_code_template
-- ----------------------------
DROP TABLE IF EXISTS `t_code_template`;
CREATE TABLE `t_code_template` (
  `ID` int(10) NOT NULL AUTO_INCREMENT,
  `Template_NAME` varchar(50) NOT NULL COMMENT '模板名称',
  `Template_path` varchar(20) DEFAULT NULL COMMENT '模板地址',
  `USER_ID` varchar(32) DEFAULT NULL,
  `Template_DESC` varchar(1000) DEFAULT NULL,
  `FILE_NAME` varchar(100) NOT NULL COMMENT '文件名称',
  `GROUP_ID` int(10) NOT NULL COMMENT '组ID',
  `local_path` varchar(100) DEFAULT NULL COMMENT '本地路径',
  `TEMPLATE_TYPE` varchar(20) NOT NULL COMMENT '模板类型',
  `CRT_USER_ID` int(10) DEFAULT NULL COMMENT '创建人',
  `ORIGINAL_ID` int(10) DEFAULT NULL COMMENT '原ID',
  `VERSION` int(1) DEFAULT '1' COMMENT '版本 1 正常版本 2 历史版本',
  `CRT_TIME` datetime DEFAULT NULL COMMENT '创建时间',
  `MDF_USER_ID` int(10) DEFAULT NULL COMMENT '修改人',
  `MDF_TIME` datetime DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`ID`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=91 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='模板';

-- ----------------------------
-- Records of t_code_template
-- ----------------------------
INSERT INTO `t_code_template` VALUES ('27', 'GUNS-Controller模板', 'controller', '1', '', '%sController.java', '5', 'java', 'beetl', '1', '4', '2', '2018-01-29 14:49:25', '76', '2017-09-17 17:23:57');
INSERT INTO `t_code_template` VALUES ('29', 'ms-controller', 'controller', '1', '微服务控制器模板', '%sController.java', '10', 'java', 'freeMarker', '1', '28', '2', '2018-05-13 18:33:56', null, null);
INSERT INTO `t_code_template` VALUES ('30', 'ms-controller', 'controller', '1', '微服务控制器模板', '%sController.java', '10', 'java', 'beetl', '1', '28', '2', '2018-05-13 19:12:54', '1', '2018-05-13 18:33:56');
INSERT INTO `t_code_template` VALUES ('31', 'ms-controller', 'controller', '1', '微服务控制器模板', '%sController.java', '10', 'java', 'beetl', '1', '28', '2', '2018-05-13 19:16:15', '1', '2018-05-13 19:12:54');
INSERT INTO `t_code_template` VALUES ('32', 'ms-controller', 'controller', '1', '微服务控制器模板', '%sController.java', '10', 'java', 'beetl', '1', '28', '2', '2018-05-13 19:19:56', '1', '2018-05-13 19:16:15');
INSERT INTO `t_code_template` VALUES ('34', 'ms-service', 'service', '1', '业务层模板', '%sService.java', '10', 'java', 'beetl', '1', '33', '2', '2018-05-13 23:24:45', null, null);
INSERT INTO `t_code_template` VALUES ('38', 'ms-entity', 'entity', '1', '实体模板', '%sEntity.java', '10', 'java', 'beetl', '1', '37', '2', '2018-05-14 00:01:36', null, null);
INSERT INTO `t_code_template` VALUES ('42', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-14 11:46:35', null, null);
INSERT INTO `t_code_template` VALUES ('43', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-14 11:48:05', '1', '2018-05-14 11:46:35');
INSERT INTO `t_code_template` VALUES ('44', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-14 11:54:52', '1', '2018-05-14 11:48:05');
INSERT INTO `t_code_template` VALUES ('45', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-14 12:00:50', '1', '2018-05-14 11:54:52');
INSERT INTO `t_code_template` VALUES ('46', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-14 12:19:39', '1', '2018-05-14 12:00:50');
INSERT INTO `t_code_template` VALUES ('47', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-14 14:14:04', '1', '2018-05-14 12:19:39');
INSERT INTO `t_code_template` VALUES ('48', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-14 14:47:54', '1', '2018-05-14 14:14:04');
INSERT INTO `t_code_template` VALUES ('49', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-14 14:50:07', '1', '2018-05-14 14:47:54');
INSERT INTO `t_code_template` VALUES ('50', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-14 14:57:18', '1', '2018-05-14 14:50:07');
INSERT INTO `t_code_template` VALUES ('51', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-14 14:59:11', '1', '2018-05-14 14:57:18');
INSERT INTO `t_code_template` VALUES ('52', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-14 15:04:06', '1', '2018-05-14 14:59:11');
INSERT INTO `t_code_template` VALUES ('53', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-14 15:05:46', '1', '2018-05-14 15:04:06');
INSERT INTO `t_code_template` VALUES ('54', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-14 15:07:21', '1', '2018-05-14 15:05:46');
INSERT INTO `t_code_template` VALUES ('55', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-14 15:11:51', '1', '2018-05-14 15:07:21');
INSERT INTO `t_code_template` VALUES ('56', 'ms-service', 'service', '1', '业务层模板', '%sService.java', '10', 'java', 'beetl', '1', '33', '2', '2018-05-14 15:59:05', '1', '2018-05-13 23:24:45');
INSERT INTO `t_code_template` VALUES ('57', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-14 16:24:35', '1', '2018-05-14 15:11:51');
INSERT INTO `t_code_template` VALUES ('58', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-14 16:26:16', '1', '2018-05-14 16:24:35');
INSERT INTO `t_code_template` VALUES ('60', 'ms-entity', 'entity', '1', '实体模板', '%sEntity.java', '10', 'java', 'beetl', '1', '37', '2', '2018-05-16 09:24:18', '1', '2018-05-14 00:01:36');
INSERT INTO `t_code_template` VALUES ('61', 'ms-controller', 'controller', '1', '微服务控制器模板', '%sController.java', '10', 'java', 'beetl', '1', '28', '2', '2018-05-16 09:30:59', '1', '2018-05-13 19:19:56');
INSERT INTO `t_code_template` VALUES ('62', 'ms-dto', 'dto', '1', '传输对象模板', '%sDto.java', '10', 'java', 'beetl', '1', '40', '2', '2018-05-16 09:31:17', null, null);
INSERT INTO `t_code_template` VALUES ('63', 'ms-entity', 'entity', '1', '实体模板', '%sEntity.java', '10', 'java', 'beetl', '1', '37', '2', '2018-05-16 09:31:38', '1', '2018-05-16 09:24:18');
INSERT INTO `t_code_template` VALUES ('64', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-16 09:32:08', '1', '2018-05-14 16:26:16');
INSERT INTO `t_code_template` VALUES ('65', 'ms-mapper', 'mapper', '1', '持久层模板', '%sMapper.java', '10', 'java', 'beetl', '1', '36', '2', '2018-05-16 09:32:22', null, null);
INSERT INTO `t_code_template` VALUES ('66', 'ms-service-impl', 'service.impl', '1', '业务层实现类模板', '%sServiceImpl.java', '10', 'java', 'beetl', '1', '35', '2', '2018-05-16 09:32:39', null, null);
INSERT INTO `t_code_template` VALUES ('67', 'ms-service', 'service', '1', '业务层模板', '%sService.java', '10', 'java', 'beetl', '1', '33', '2', '2018-05-16 09:32:54', '1', '2018-05-14 15:59:05');
INSERT INTO `t_code_template` VALUES ('68', 'ms-vo', 'vo', '1', '视图类模板', '%sVo.java', '10', 'java', 'beetl', '1', '39', '2', '2018-05-16 09:33:08', null, null);
INSERT INTO `t_code_template` VALUES ('69', 'ms-controller', 'controller', '1', '微服务控制器模板', '%sController.java', '10', 'java', 'beetl', '1', '28', '2', '2018-05-16 09:35:45', '1', '2018-05-16 09:30:59');
INSERT INTO `t_code_template` VALUES ('70', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-16 09:40:21', '1', '2018-05-16 09:32:08');
INSERT INTO `t_code_template` VALUES ('71', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-16 14:10:29', '1', '2018-05-16 09:40:21');
INSERT INTO `t_code_template` VALUES ('72', 'ms-controller', 'controller', '1', '微服务控制器模板', '%sController.java', '10', 'java', 'beetl', '1', '28', '2', '2018-05-16 14:10:48', '1', '2018-05-16 09:35:45');
INSERT INTO `t_code_template` VALUES ('73', 'ms-dto', 'dto', '1', '传输对象模板', '%sDto.java', '10', 'java', 'beetl', '1', '40', '2', '2018-05-16 14:11:03', '1', '2018-05-16 09:31:17');
INSERT INTO `t_code_template` VALUES ('74', 'ms-entity', 'entity', '1', '实体模板', '%sEntity.java', '10', 'java', 'beetl', '1', '37', '2', '2018-05-16 14:11:18', '1', '2018-05-16 09:31:38');
INSERT INTO `t_code_template` VALUES ('75', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-16 14:11:35', '1', '2018-05-16 14:10:29');
INSERT INTO `t_code_template` VALUES ('76', 'ms-mapper', 'mapper', '1', '持久层模板', '%sMapper.java', '10', 'java', 'beetl', '1', '36', '2', '2018-05-16 14:11:49', '1', '2018-05-16 09:32:22');
INSERT INTO `t_code_template` VALUES ('77', 'ms-service-impl', 'service.impl', '1', '业务层实现类模板', '%sServiceImpl.java', '10', 'java', 'beetl', '1', '35', '2', '2018-05-16 14:12:05', '1', '2018-05-16 09:32:39');
INSERT INTO `t_code_template` VALUES ('78', 'ms-service', 'service', '1', '业务层模板', '%sService.java', '10', 'java', 'beetl', '1', '33', '2', '2018-05-16 14:12:19', '1', '2018-05-16 09:32:54');
INSERT INTO `t_code_template` VALUES ('79', 'ms-vo', 'vo', '1', '视图类模板', '%sVo.java', '10', 'java', 'beetl', '1', '39', '2', '2018-05-16 14:12:33', '1', '2018-05-16 09:33:08');
INSERT INTO `t_code_template` VALUES ('80', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-16 14:26:33', '1', '2018-05-16 14:11:35');
INSERT INTO `t_code_template` VALUES ('81', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-16 14:27:55', '1', '2018-05-16 14:26:33');
INSERT INTO `t_code_template` VALUES ('82', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-16 14:31:02', '1', '2018-05-16 14:27:55');
INSERT INTO `t_code_template` VALUES ('83', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-16 21:50:21', '1', '2018-05-16 14:31:02');
INSERT INTO `t_code_template` VALUES ('84', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-16 22:05:14', '1', '2018-05-16 21:50:21');
INSERT INTO `t_code_template` VALUES ('85', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-16 22:07:34', '1', '2018-05-16 22:05:14');
INSERT INTO `t_code_template` VALUES ('86', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-16 22:12:51', '1', '2018-05-16 22:07:34');
INSERT INTO `t_code_template` VALUES ('87', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-16 22:18:06', '1', '2018-05-16 22:12:51');
INSERT INTO `t_code_template` VALUES ('88', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-16 22:20:01', '1', '2018-05-16 22:18:06');
INSERT INTO `t_code_template` VALUES ('89', 'ms-mapper-xml', 'mapper', '1', 'ORM映射模板', '%s.xml', '10', 'resources', 'beetl', '1', '41', '2', '2018-05-16 22:22:36', '1', '2018-05-16 22:20:01');
INSERT INTO `t_code_template` VALUES ('90', 'spring-boot-entity', 'entity', '1', '实体模板', '%s.java', '13', 'java', 'beetl', '1', null, '1', '2019-04-17 22:53:53', null, null);

-- ----------------------------
-- Table structure for t_code_template_file
-- ----------------------------
DROP TABLE IF EXISTS `t_code_template_file`;
CREATE TABLE `t_code_template_file` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `template_id` int(10) NOT NULL,
  `file` text COMMENT '文件内容',
  `file_type` varchar(20) DEFAULT NULL COMMENT '文件类型',
  `CRT_TIME` datetime DEFAULT NULL COMMENT '创建时间',
  `MDF_TIME` datetime DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=96 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='模板文件内容';

-- ----------------------------
-- Records of t_code_template_file
-- ----------------------------
INSERT INTO `t_code_template_file` VALUES ('18', '34', 'package ${g.codePackage}.controller;\n\nimport com.baomidou.mybatisplus.mapper.EntityWrapper;\nimport com.baomidou.mybatisplus.plugins.Page;\nimport com.baomidou.mybatisplus.plugins.pagination.Pagination;\nimport com.stylefeng.guns.common.annotion.Permission;\nimport com.stylefeng.guns.common.annotion.log.BussinessLog;\nimport com.stylefeng.guns.common.constant.factory.PageFactory;\nimport com.stylefeng.guns.common.constant.state.BizLogType;\nimport com.stylefeng.guns.common.controller.BaseController;\nimport com.stylefeng.guns.common.exception.BizExceptionEnum;\nimport com.stylefeng.guns.common.exception.BussinessException;\nimport com.stylefeng.guns.common.persistence.model.OperationLog;\nimport com.stylefeng.guns.core.util.ToolUtil;\nimport ${g.codePackage}.model.${g.entityName}Model;\nimport ${g.codePackage}.service.I${g.entityName}Service;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.ResponseBody;\n\nimport javax.annotation.Resource;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * ${g.name}控制器\n *\n * @author ${g.author}\n * @Date ${g.date}\n */\n@Controller\n@RequestMapping(\"/${strutil.toLowerCase(g.entityName)}\")\npublic class ${g.entityName}Controller extends BaseController {\n\n    private static final Logger LOGGER = LoggerFactory.getLogger(${g.entityName}Controller.class);\n\n    private String PREFIX = \"/biz/${strutil.toLowerCase(g.entityName)}/\";\n\n    @Autowired\n    private I${g.entityName}Service ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service;\n\n    /**\n     * 跳转到首页\n     */\n    @RequestMapping(\"\")\n    public String index() {\n        return PREFIX + \"${strutil.toLowerCase(g.entityName)}.html\";\n    }\n\n    /**\n     * 跳转到添加\n     */\n    @RequestMapping(\"/goto_add\")\n    public String ${g.entityName}Add() {\n        return PREFIX + \"${strutil.toLowerCase(g.entityName)}_add.html\";\n    }\n\n    /**\n     * 跳转到修改\n     */\n    @RequestMapping(\"/goto_update/{id}\")\n    public String ${g.entityName}Update(@PathVariable Integer id, Model model) {\n	model.addAttribute(\"${strutil.toLowerCase(g.entityName)}\", ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.selectById(id));\n        return PREFIX + \"${strutil.toLowerCase(g.entityName)}_edit.html\";\n    }\n\n    /**\n     * 获取列表\n     */\n    @RequestMapping(value = \"/list\")\n    @ResponseBody\n    public Object list(${g.entityName}Model model) {\n        Page<${g.entityName}Model> page = new PageFactory<${g.entityName}Model>().defaultPage();\n        page.setRecords(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.selectPage(page,model,new EntityWrapper<${g.entityName}Model>()));\n        return super.packForBT(page);\n    }\n\n\n    @BussinessLog(value = \"${g.name}新增\", key = \"companyid\" )\n    @RequestMapping(value = \"/add\")\n    @Permission\n    @ResponseBody\n    public Object add(${g.entityName}Model model) {\n        ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.insert(model);\n        return SUCCESS_TIP;\n    }\n\n\n    @BussinessLog(value = \"${g.name}删除\", key = \"id\" )\n    @RequestMapping(value = \"/delete\")\n    @Permission\n    @ResponseBody\n    public Object delete(Integer id) {\n        ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.deleteById(id);\n        return SUCCESS_TIP;\n    }\n\n\n    @BussinessLog(value = \"${g.name}修改\", key = \"id\" )\n    @RequestMapping(value = \"/update\")\n    @Permission\n    @ResponseBody\n    public Object update(${g.entityName}Model model) {\n        if (ToolUtil.isOneEmpty(model.getId())) {\n            throw new BussinessException(BizExceptionEnum.REQUEST_NULL);\n        }\n        ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.updateById(model);\n        return super.SUCCESS_TIP;\n    }\n\n    /**\n     * 详情\n     */\n    @RequestMapping(value = \"/detail\")\n    @ResponseBody\n    public Object detail(${g.entityName}Model model) {\n        return ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.selectOne(model);\n    }\n}\n', 'Java', '2017-10-24 16:00:35', null);
INSERT INTO `t_code_template_file` VALUES ('32', '27', 'package ${g.codePackage}.controller;\n\nimport com.baomidou.mybatisplus.mapper.EntityWrapper;\nimport com.baomidou.mybatisplus.plugins.Page;\nimport com.baomidou.mybatisplus.plugins.pagination.Pagination;\nimport com.stylefeng.guns.common.annotion.Permission;\nimport com.stylefeng.guns.common.annotion.log.BussinessLog;\nimport com.stylefeng.guns.common.constant.factory.PageFactory;\nimport com.stylefeng.guns.common.constant.state.BizLogType;\nimport com.stylefeng.guns.common.controller.BaseController;\nimport com.stylefeng.guns.common.exception.BizExceptionEnum;\nimport com.stylefeng.guns.common.exception.BussinessException;\nimport com.stylefeng.guns.common.persistence.model.OperationLog;\nimport com.stylefeng.guns.core.util.ToolUtil;\nimport ${g.codePackage}.model.${g.entityName}Model;\nimport ${g.codePackage}.service.I${g.entityName}Service;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.ResponseBody;\n\nimport javax.annotation.Resource;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * ${g.name}控制器\n *\n * @author ${g.author}\n * @Date ${g.date}\n */\n@Controller\n@RequestMapping(\"/${strutil.toLowerCase(g.entityName)}\")\npublic class ${g.entityName}Controller extends BaseController {\n\n    private static final Logger LOGGER = LoggerFactory.getLogger(${g.entityName}Controller.class);\n\n    private String PREFIX = \"/biz/${strutil.toLowerCase(g.entityName)}/\";\n\n    @Autowired\n    private I${g.entityName}Service ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service;\n\n    /**\n     * 跳转到首页\n     */\n    @RequestMapping(\"\")\n    public String index() {\n        return PREFIX + \"${strutil.toLowerCase(g.entityName)}.html\";\n    }\n\n    /**\n     * 跳转到添加\n     */\n    @RequestMapping(\"/goto_add\")\n    public String ${g.entityName}Add() {\n        return PREFIX + \"${strutil.toLowerCase(g.entityName)}_add.html\";\n    }\n\n    /**\n     * 跳转到修改\n     */\n    @RequestMapping(\"/goto_update/{id}\")\n    public String ${g.entityName}Update(@PathVariable Integer id, Model model) {\n	model.addAttribute(\"${strutil.toLowerCase(g.entityName)}\", ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.selectById(id));\n        return PREFIX + \"${strutil.toLowerCase(g.entityName)}_edit.html\";\n    }\n\n    /**\n     * 获取列表\n     */\n    @RequestMapping(value = \"/list\")\n    @ResponseBody\n    public Object list(${g.entityName}Model model) {\n        Page<${g.entityName}Model> page = new PageFactory<${g.entityName}Model>().defaultPage();\n        page.setRecords(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.selectPage(page,model,new EntityWrapper<${g.entityName}Model>()));\n        return super.packForBT(page);\n    }\n\n\n    @BussinessLog(value = \"${g.name}新增\", key = \"companyid\" )\n    @RequestMapping(value = \"/add\")\n    @Permission\n    @ResponseBody\n    public Object add(${g.entityName}Model model) {\n        ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.insert(model);\n        return SUCCESS_TIP;\n    }\n\n\n    @BussinessLog(value = \"${g.name}删除\", key = \"id\" )\n    @RequestMapping(value = \"/delete\")\n    @Permission\n    @ResponseBody\n    public Object delete(Integer id) {\n        ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.deleteById(id);\n        return SUCCESS_TIP;\n    }\n\n\n    @BussinessLog(value = \"${g.name}修改\", key = \"id\" )\n    @RequestMapping(value = \"/update\")\n    @Permission\n    @ResponseBody\n    public Object update(${g.entityName}Model model) {\n        if (ToolUtil.isOneEmpty(model.getId())) {\n            throw new BussinessException(BizExceptionEnum.REQUEST_NULL);\n        }\n        ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.updateById(model);\n        return super.SUCCESS_TIP;\n    }\n\n    /**\n     * 详情\n     */\n    @RequestMapping(value = \"/detail\")\n    @ResponseBody\n    public Object detail(${g.entityName}Model model) {\n        return ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.selectOne(model);\n    }\n}\n', 'Java', '2018-01-29 14:49:25', '2017-09-14 16:40:20');
INSERT INTO `t_code_template_file` VALUES ('34', '29', 'package ${g.codePackage}.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.ModelAttribute;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport ${g.codePackage}.dto.${g.entityName}Dto;\nimport ${g.codePackage}.dto.PageQueryParam;\nimport ${g.codePackage}.service.${g.entityName}Service;\nimport ${g.codePackage}.vo.${g.entityName}Vo;\nimport ${g.codePackage}.vo.Page;\nimport ${g.codePackage}.vo.ResultVo;\n\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\n\n/**\n * ${g.name}\n * @author ${g.author}\n * @Date ${g.date}\n *\n */\n@Api(tags=\"${g.name}\")\n@RestController\n@RequestMapping(\"/${strutil.toLowerCase(g.entityName)}\")\npublic class ${g.entityName}Controller {\n\n    @Autowired\n    private ${g.entityName}Service ${strutil.toLowerCase(g.entityName)}Service;\n    \n    @ApiOperation(\"添加\")\n    @RequestMapping(method = RequestMethod.POST)\n    public ResultVo<?> create(@RequestBody ${g.entityName}Dto ${strutil.toLowerCase(g.entityName)}Dto) {\n        ${strutil.toLowerCase(g.entityName)}Service.create(${strutil.toLowerCase(g.entityName)}Dto);\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"删除\")\n    @RequestMapping(value = \"/{${g.idName}}\", method = RequestMethod.DELETE)\n    public ResultVo<?> delete(@PathVariable(\"${g.idName}\") String ${g.idName}) {\n        ${strutil.toLowerCase(g.entityName)}Service.delete(${g.idName});\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"更新\")\n    @RequestMapping(method = RequestMethod.PUT)\n    public ResultVo<?> update(@RequestBody ${g.entityName}Dto ${strutil.toLowerCase(g.entityName)}Dto) {\n        ${strutil.toLowerCase(g.entityName)}Service.update(${strutil.toLowerCase(g.entityName)}Dto);\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"分页查询${g.name}\")\n    @RequestMapping(method=RequestMethod.GET)\n    public ResultVo<?> query(@ModelAttribute ${g.entityName}Dto ${strutil.toLowerCase(g.entityName)}Dto, @ModelAttribute PageQueryParam pageQueryParam) {\n        Page<${g.entityName}Vo> page = ${strutil.toLowerCase(g.entityName)}Service.query(${strutil.toLowerCase(g.entityName)}Dto, pageQueryParam);\n        return ResultVo.buildSuccessResult(page);\n    }\n\n    @ApiOperation(\"${g.name}详情\")\n    @RequestMapping(value=\"/{${g.idName}}\", method=RequestMethod.GET)\n    public ResultVo<?> detail(@PathVariable(\"${g.idName}\") String ${g.idName}) {\n        return ResultVo.buildSuccessResult(${strutil.toLowerCase(g.entityName)}Service.find(${g.idName}));\n    }\n\n}\n', 'Java', '2018-05-13 18:33:56', null);
INSERT INTO `t_code_template_file` VALUES ('35', '30', 'package ${g.codePackage}.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.ModelAttribute;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport ${g.codePackage}.dto.${g.entityName}Dto;\nimport ${g.codePackage}.dto.PageQueryParam;\nimport ${g.codePackage}.service.${g.entityName}Service;\nimport ${g.codePackage}.vo.${g.entityName}Vo;\nimport ${g.codePackage}.vo.Page;\nimport ${g.codePackage}.vo.ResultVo;\n\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\n\n/**\n * ${g.name}\n * @author ${g.author}\n * @Date ${g.date}\n *\n */\n@Api(tags=\"${g.name}\")\n@RestController\n@RequestMapping(\"/${strutil.toLowerCase(g.entityName)}\")\npublic class ${g.entityName}Controller {\n\n    @Autowired\n    private ${g.entityName}Service ${strutil.toLowerCase(g.entityName)}Service;\n    \n    @ApiOperation(\"添加\")\n    @RequestMapping(method = RequestMethod.POST)\n    public ResultVo<?> create(@RequestBody ${g.entityName}Dto ${strutil.toLowerCase(g.entityName)}Dto) {\n        ${strutil.toLowerCase(g.entityName)}Service.create(${strutil.toLowerCase(g.entityName)}Dto);\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"删除\")\n    @RequestMapping(value = \"/{${g.idName}}\", method = RequestMethod.DELETE)\n    public ResultVo<?> delete(@PathVariable(\"${g.idName}\") String ${g.idName}) {\n        ${strutil.toLowerCase(g.entityName)}Service.delete(${g.idName});\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"更新\")\n    @RequestMapping(method = RequestMethod.PUT)\n    public ResultVo<?> update(@RequestBody ${g.entityName}Dto ${strutil.toLowerCase(g.entityName)}Dto) {\n        ${strutil.toLowerCase(g.entityName)}Service.update(${strutil.toLowerCase(g.entityName)}Dto);\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"分页查询${g.name}\")\n    @RequestMapping(method=RequestMethod.GET)\n    public ResultVo<?> query(@ModelAttribute ${g.entityName}Dto ${strutil.toLowerCase(g.entityName)}Dto, @ModelAttribute PageQueryParam pageQueryParam) {\n        Page<${g.entityName}Vo> page = ${strutil.toLowerCase(g.entityName)}Service.query(${strutil.toLowerCase(g.entityName)}Dto, pageQueryParam);\n        return ResultVo.buildSuccessResult(page);\n    }\n\n    @ApiOperation(\"${g.name}详情\")\n    @RequestMapping(value=\"/{${g.idName}}\", method=RequestMethod.GET)\n    public ResultVo<?> detail(@PathVariable(\"${g.idName}\") String ${g.idName}) {\n        return ResultVo.buildSuccessResult(${strutil.toLowerCase(g.entityName)}Service.find(${g.idName}));\n    }\n\n}\n', 'Java', '2018-05-13 19:12:54', null);
INSERT INTO `t_code_template_file` VALUES ('36', '31', 'package ${g.codePackage}.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.ModelAttribute;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport ${g.codePackage}.dto.${g.entityName}Dto;\nimport ${g.codePackage}.dto.PageQueryParam;\nimport ${g.codePackage}.service.${g.entityName}Service;\nimport ${g.codePackage}.vo.${g.entityName}Vo;\nimport ${g.codePackage}.vo.Page;\nimport ${g.codePackage}.vo.ResultVo;\n\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\n\n/**\n * ${g.name}\n * @author ${g.author}\n * @Date ${g.date}\n *\n */\n@Api(tags=\"${g.name}\")\n@RestController\n@RequestMapping(\"/${strutil.toLowerCase(g.entityName)}\")\npublic class ${g.entityName}Controller {\n\n    @Autowired\n    private ${g.entityName}Service ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service;\n    \n    @ApiOperation(\"添加\")\n    @RequestMapping(method = RequestMethod.POST)\n    public ResultVo<?> create(@RequestBody ${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto) {\n        ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.create(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto);\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"删除\")\n    @RequestMapping(value = \"/{${g.idName}}\", method = RequestMethod.DELETE)\n    public ResultVo<?> delete(@PathVariable(\"${g.idName}\") String ${g.idName}) {\n        ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.delete(${g.idName});\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"更新\")\n    @RequestMapping(method = RequestMethod.PUT)\n    public ResultVo<?> update(@RequestBody ${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto) {\n        ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.update(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto);\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"分页查询${g.name}\")\n    @RequestMapping(method=RequestMethod.GET)\n    public ResultVo<?> query(@ModelAttribute ${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto, @ModelAttribute PageQueryParam pageQueryParam) {\n        Page<${g.entityName}Vo> page = ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.query(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto, pageQueryParam);\n        return ResultVo.buildSuccessResult(page);\n    }\n\n    @ApiOperation(\"${g.name}详情\")\n    @RequestMapping(value=\"/{${g.idName}}\", method=RequestMethod.GET)\n    public ResultVo<?> detail(@PathVariable(\"${g.idName}\") String ${g.idName}) {\n        return ResultVo.buildSuccessResult(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.find(${g.idName}));\n    }\n\n}\n', 'Java', '2018-05-13 19:16:15', null);
INSERT INTO `t_code_template_file` VALUES ('37', '32', 'package ${g.codePackage}.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.ModelAttribute;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport ${g.codePackage}.dto.${g.entityName}Dto;\nimport ${g.codePackage}.dto.PageQueryParam;\nimport ${g.codePackage}.service.${g.entityName}Service;\nimport ${g.codePackage}.vo.${g.entityName}Vo;\nimport ${g.codePackage}.vo.Page;\nimport ${g.codePackage}.vo.ResultVo;\n\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\n\n/**\n * ${g.name}\n * @author ${g.author}\n * @Date ${g.date}\n *\n */\n@Api(tags=\"${g.name}\")\n@RestController\n@RequestMapping(\"/${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}\")\npublic class ${g.entityName}Controller {\n\n    @Autowired\n    private ${g.entityName}Service ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service;\n    \n    @ApiOperation(\"添加\")\n    @RequestMapping(method = RequestMethod.POST)\n    public ResultVo<?> create(@RequestBody ${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto) {\n        ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.create(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto);\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"删除\")\n    @RequestMapping(value = \"/{${g.idName}}\", method = RequestMethod.DELETE)\n    public ResultVo<?> delete(@PathVariable(\"${g.idName}\") String ${g.idName}) {\n        ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.delete(${g.idName});\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"更新\")\n    @RequestMapping(method = RequestMethod.PUT)\n    public ResultVo<?> update(@RequestBody ${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto) {\n        ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.update(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto);\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"分页查询${g.name}\")\n    @RequestMapping(method=RequestMethod.GET)\n    public ResultVo<?> query(@ModelAttribute ${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto, @ModelAttribute PageQueryParam pageQueryParam) {\n        Page<${g.entityName}Vo> page = ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.query(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto, pageQueryParam);\n        return ResultVo.buildSuccessResult(page);\n    }\n\n    @ApiOperation(\"${g.name}详情\")\n    @RequestMapping(value=\"/{${g.idName}}\", method=RequestMethod.GET)\n    public ResultVo<?> detail(@PathVariable(\"${g.idName}\") String ${g.idName}) {\n        return ResultVo.buildSuccessResult(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.find(${g.idName}));\n    }\n\n}\n', 'Java', '2018-05-13 19:19:56', null);
INSERT INTO `t_code_template_file` VALUES ('39', '34', 'package ${g.codePackage}.service;\n\nimport ${g.codePackage}.dto.${g.entityName}Dto;\nimport ${g.codePackage}.dto.PageQueryParam;\nimport ${g.codePackage}.vo.DbInfoVo;\nimport ${g.codePackage}.vo.Page;\n\n/**\n * ${g.name}\n * @author ${g.author}\n *\n */\npublic interface ${g.entityName}Service {\n\n    /**\n     * 添加\n     * @param ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto\n     */\n    void create(${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto);\n\n    /**\n     * 删除\n     * @param id\n     */\n    void delete(String id);\n    \n    /**\n     * 更新\n     * @param ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto\n     */\n    void update(${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto);\n\n    /**\n     * 按主键查询\n     * @param id\n     * @return\n     */\n    DbInfoVo find(String id);\n    \n    /**\n     * 查询\n     * @param ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto\n     * @param pageQueryParam\n     * @return\n     */\n    Page<DbInfoVo> query(${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto, PageQueryParam pageQueryParam);\n}\n', 'Java', '2018-05-13 23:24:45', null);
INSERT INTO `t_code_template_file` VALUES ('43', '38', 'package ${g.codePackage}.entity;\n\nimport lombok.Getter;\nimport lombok.Setter;\nimport lombok.ToString;\n\n/**\n * ${g.name}：${g.tableName}\n * @author ${g.author}\n *\n */\n@Getter\n@Setter\n@ToString\npublic class ${g.entityName}Entity extends BaseEntity {\n\n<%for(field in t.fields){%>\n     /**\n     * ${field.comment}\n     */\n    private ${field.type} ${field.name};\n<%}%>\n\n}\n', 'Java', '2018-05-14 00:01:36', null);
INSERT INTO `t_code_template_file` VALUES ('47', '42', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${g.entityName}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${g.entityName}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var fieldNames = [];\n        for(field in t.fields){\n            fieldNames.push(field.fieldName);\n        }\n        %>\n        ${sputil.join(fieldNames, \',\')}\n    </sql>\n    \n    <resultMap id=\"${g.entityName}Map\"\n        type=\"${g.codePackage}.vo.${g.entityName}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        insert into ${g.tableName} (\n        <%\n        var fieldNames = [];\n        for(field in t.fields){\n            fieldNames.push(field.fieldName);\n        }\n        %>\n        ${sputil.join(fieldNames, \',\')}\n        )\n        values (\n        <%\n        var names = [];\n        for(field in t.fields){\n            names.push(\'#{\' + field.name + \'}\');\n        }\n        %>\n        ${sputil.join(names, \',\')}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${g.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        update ${g.tableName}\n        <set>\n            <%for(field in t.fields){%>\n                <%if (field.type == \'String\') {%>\n                    <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}else{%>\n                    <if test=\"${field.name} != null\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}%>\n            <%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"${g.codePackage}.dto.${g.entityName}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-14 11:46:35', null);
INSERT INTO `t_code_template_file` VALUES ('48', '43', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${g.entityName}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${g.entityName}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var fieldNames = [];\n        for(field in t.fields){\n            fieldNames.push(field.fieldName);\n        }\n        %>\n        ${sputil.join(fieldNames, \',\')}\n    </sql>\n    \n    <resultMap id=\"${g.entityName}Map\"\n        type=\"${g.codePackage}.vo.${g.entityName}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        insert into ${g.tableName} (\n        ${sputil.join(fieldNames, \',\')}\n        )\n        values (\n        <%\n        var names = [];\n        for(field in t.fields){\n            names.push(\'#{\' + field.name + \'}\');\n        }\n        %>\n        ${sputil.join(names, \',\')}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${g.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        update ${g.tableName}\n        <set>\n            <%for(field in t.fields){%>\n                <%if (field.type == \'String\') {%>\n                    <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}else{%>\n                    <if test=\"${field.name} != null\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}%>\n            <%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"${g.codePackage}.dto.${g.entityName}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-14 11:48:05', null);
INSERT INTO `t_code_template_file` VALUES ('49', '44', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${g.entityName}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${g.entityName}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var fieldNames = [];\n        for(field in t.fields){\n            fieldNames.add(field.fieldName);\n        }\n        %>\n        ${sputil.join(fieldNames, \',\')}\n    </sql>\n    \n    <resultMap id=\"${g.entityName}Map\"\n        type=\"${g.codePackage}.vo.${g.entityName}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        insert into ${g.tableName} (\n        ${sputil.join(fieldNames, \',\')}\n        )\n        values (\n        <%\n        var names = [];\n        for(field in t.fields){\n            names.add(\'#{\' + field.name + \'}\');\n        }\n        %>\n        ${sputil.join(names, \',\')}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${g.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        update ${g.tableName}\n        <set>\n            <%for(field in t.fields){%>\n                <%if (field.type == \'String\') {%>\n                    <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}else{%>\n                    <if test=\"${field.name} != null\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}%>\n            <%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"${g.codePackage}.dto.${g.entityName}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-14 11:54:52', null);
INSERT INTO `t_code_template_file` VALUES ('50', '45', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${g.entityName}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${g.entityName}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var fieldNames = [];\n        for(field in t.fields){\n            array.add(fieldNames, field.fieldName);\n        }\n        %>\n        ${sputil.join(fieldNames, \',\')}\n    </sql>\n    \n    <resultMap id=\"${g.entityName}Map\"\n        type=\"${g.codePackage}.vo.${g.entityName}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        insert into ${g.tableName} (\n        ${sputil.join(fieldNames, \',\')}\n        )\n        values (\n        <%\n        var names = [];\n        for(field in t.fields){\n            array.add(names, \'#{\' + field.name + \'}\');\n        }\n        %>\n        ${sputil.join(names, \',\')}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${g.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        update ${g.tableName}\n        <set>\n            <%for(field in t.fields){%>\n                <%if (field.type == \'String\') {%>\n                    <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}else{%>\n                    <if test=\"${field.name} != null\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}%>\n            <%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"${g.codePackage}.dto.${g.entityName}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-14 12:00:50', null);
INSERT INTO `t_code_template_file` VALUES ('51', '46', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${g.entityName}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${g.entityName}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var fieldNames = [];\n        for(field in t.fields){\n            array.add(fieldNames, field.fieldName);\n        }\n        %>\n        ${sputil.join([\'a\', \'b\'], \',\')}\n    </sql>\n    \n    <resultMap id=\"${g.entityName}Map\"\n        type=\"${g.codePackage}.vo.${g.entityName}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        insert into ${g.tableName} (\n        ${sputil.join(fieldNames, \',\')}\n        )\n        values (\n        <%\n        var names = [];\n        for(field in t.fields){\n            array.add(names, \'#{\' + field.name + \'}\');\n        }\n        %>\n        ${sputil.join(names, \',\')}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${g.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        update ${g.tableName}\n        <set>\n            <%for(field in t.fields){%>\n                <%if (field.type == \'String\') {%>\n                    <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}else{%>\n                    <if test=\"${field.name} != null\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}%>\n            <%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"${g.codePackage}.dto.${g.entityName}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-14 12:19:39', null);
INSERT INTO `t_code_template_file` VALUES ('52', '47', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${g.entityName}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${g.entityName}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var fieldNames = [];\n        for(field in t.fields){\n            array.add(fieldNames, field.fieldName);\n        }\n        %>\n        ${sputil.join(fieldNames, \',\')}\n    </sql>\n    \n    <resultMap id=\"${g.entityName}Map\"\n        type=\"${g.codePackage}.vo.${g.entityName}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        insert into ${g.tableName} (\n        ${sputil.join(fieldNames, \',\')}\n        )\n        values (\n        <%\n        var names = [];\n        for(field in t.fields){\n            array.add(names, \'#{\' + field.name + \'}\');\n        }\n        %>\n        ${sputil.join(names, \',\')}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${g.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        update ${g.tableName}\n        <set>\n            <%for(field in t.fields){%>\n                <%if (field.type == \'String\') {%>\n                    <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}else{%>\n                    <if test=\"${field.name} != null\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}%>\n            <%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"${g.codePackage}.dto.${g.entityName}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-14 14:14:04', null);
INSERT INTO `t_code_template_file` VALUES ('53', '48', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${g.entityName}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${g.entityName}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var fieldNames = [];\n        for(field in t.fields){\n            array.add(fieldNames, field.fieldName);\n        }\n        %>\n        ${sputil.join([\'a\', \'b\'], \',\')}\n    </sql>\n    \n    <resultMap id=\"${g.entityName}Map\"\n        type=\"${g.codePackage}.vo.${g.entityName}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        insert into ${g.tableName} (\n        ${sputil.join(fieldNames, \',\')}\n        )\n        values (\n        <%\n        var names = [];\n        for(field in t.fields){\n            array.add(names, \'#{\' + field.name + \'}\');\n        }\n        %>\n        ${sputil.join(names, \',\')}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${g.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        update ${g.tableName}\n        <set>\n            <%for(field in t.fields){%>\n                <%if (field.type == \'String\') {%>\n                    <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}else{%>\n                    <if test=\"${field.name} != null\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}%>\n            <%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"${g.codePackage}.dto.${g.entityName}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-14 14:47:54', null);
INSERT INTO `t_code_template_file` VALUES ('54', '49', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${g.entityName}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${g.entityName}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var fieldNames = [];\n        for(field in t.fields){\n            array.add(fieldNames, field.fieldName);\n        }\n        %>\n        ${sputil.startsWithIgnoreCase(\"abc\", \"a\")}\n        ${sputil.join([\'a\', \'b\'], \',\')}\n    </sql>\n    \n    <resultMap id=\"${g.entityName}Map\"\n        type=\"${g.codePackage}.vo.${g.entityName}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        insert into ${g.tableName} (\n        ${sputil.join(fieldNames, \',\')}\n        )\n        values (\n        <%\n        var names = [];\n        for(field in t.fields){\n            array.add(names, \'#{\' + field.name + \'}\');\n        }\n        %>\n        ${sputil.join(names, \',\')}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${g.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        update ${g.tableName}\n        <set>\n            <%for(field in t.fields){%>\n                <%if (field.type == \'String\') {%>\n                    <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}else{%>\n                    <if test=\"${field.name} != null\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}%>\n            <%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"${g.codePackage}.dto.${g.entityName}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-14 14:50:07', null);
INSERT INTO `t_code_template_file` VALUES ('55', '50', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${g.entityName}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${g.entityName}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var fieldNames = [];\n        for(field in t.fields){\n            array.add(fieldNames, field.fieldName);\n        }\n        %>\n        ${startsWithIgnoreCase(\"abc\", \"a\")}\n        ${join([\'a\', \'b\'], \',\')}\n    </sql>\n    \n    <resultMap id=\"${g.entityName}Map\"\n        type=\"${g.codePackage}.vo.${g.entityName}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        insert into ${g.tableName} (\n        ${sputil.join(fieldNames, \',\')}\n        )\n        values (\n        <%\n        var names = [];\n        for(field in t.fields){\n            array.add(names, \'#{\' + field.name + \'}\');\n        }\n        %>\n        ${sputil.join(names, \',\')}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${g.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        update ${g.tableName}\n        <set>\n            <%for(field in t.fields){%>\n                <%if (field.type == \'String\') {%>\n                    <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}else{%>\n                    <if test=\"${field.name} != null\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}%>\n            <%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"${g.codePackage}.dto.${g.entityName}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-14 14:57:18', null);
INSERT INTO `t_code_template_file` VALUES ('56', '51', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${g.entityName}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${g.entityName}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var baseColumnList = \'\';\n        for(field in t.fields){\n            baseColumnList += field.fieldName + \',\';\n        }\n        %>\n        ${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${g.entityName}Map\"\n        type=\"${g.codePackage}.vo.${g.entityName}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        insert into ${g.tableName} (\n        ${sputil.join(fieldNames, \',\')}\n        )\n        values (\n        <%\n        var names = [];\n        for(field in t.fields){\n            array.add(names, \'#{\' + field.name + \'}\');\n        }\n        %>\n        ${sputil.join(names, \',\')}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${g.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        update ${g.tableName}\n        <set>\n            <%for(field in t.fields){%>\n                <%if (field.type == \'String\') {%>\n                    <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}else{%>\n                    <if test=\"${field.name} != null\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}%>\n            <%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"${g.codePackage}.dto.${g.entityName}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-14 14:59:11', null);
INSERT INTO `t_code_template_file` VALUES ('57', '52', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${g.entityName}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${g.entityName}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var baseColumnList = \'\';\n        for(field in t.fields){\n            baseColumnList = baseColumnList + field.fieldName + \',\';\n        }\n        %>\n        ${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${g.entityName}Map\"\n        type=\"${g.codePackage}.vo.${g.entityName}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        insert into ${g.tableName} (\n        ${sputil.join(fieldNames, \',\')}\n        )\n        values (\n        <%\n        var names = [];\n        for(field in t.fields){\n            array.add(names, \'#{\' + field.name + \'}\');\n        }\n        %>\n        ${sputil.join(names, \',\')}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${g.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        update ${g.tableName}\n        <set>\n            <%for(field in t.fields){%>\n                <%if (field.type == \'String\') {%>\n                    <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}else{%>\n                    <if test=\"${field.name} != null\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}%>\n            <%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"${g.codePackage}.dto.${g.entityName}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-14 15:04:06', null);
INSERT INTO `t_code_template_file` VALUES ('58', '53', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${g.entityName}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${g.entityName}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var baseColumnList = \'\';\n        for(field in t.fields){\n            baseColumnList += field.fieldName + \',\';\n        }\n        if (strutil.length(baseColumnList) > 0) {\n            strutil.subStringTo(baseColumnList,0,strutil.length(baseColumnList)-1);\n        }\n        %>\n        ${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${g.entityName}Map\"\n        type=\"${g.codePackage}.vo.${g.entityName}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        insert into ${g.tableName} (\n        ${sputil.join(fieldNames, \',\')}\n        )\n        values (\n        <%\n        var names = [];\n        for(field in t.fields){\n            array.add(names, \'#{\' + field.name + \'}\');\n        }\n        %>\n        ${sputil.join(names, \',\')}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${g.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        update ${g.tableName}\n        <set>\n            <%for(field in t.fields){%>\n                <%if (field.type == \'String\') {%>\n                    <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}else{%>\n                    <if test=\"${field.name} != null\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}%>\n            <%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"${g.codePackage}.dto.${g.entityName}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-14 15:05:46', null);
INSERT INTO `t_code_template_file` VALUES ('59', '54', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${g.entityName}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${g.entityName}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var baseColumnList = \'\';\n        for(field in t.fields){\n            baseColumnList += field.fieldName + \',\';\n        }\n        if (strutil.length(baseColumnList) > 0) {\n            baseColumnList = strutil.subStringTo(baseColumnList,0,strutil.length(baseColumnList)-1);\n        }\n        %>\n        ${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${g.entityName}Map\"\n        type=\"${g.codePackage}.vo.${g.entityName}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        insert into ${g.tableName} (\n        ${sputil.join(fieldNames, \',\')}\n        )\n        values (\n        <%\n        var names = [];\n        for(field in t.fields){\n            array.add(names, \'#{\' + field.name + \'}\');\n        }\n        %>\n        ${sputil.join(names, \',\')}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${g.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        update ${g.tableName}\n        <set>\n            <%for(field in t.fields){%>\n                <%if (field.type == \'String\') {%>\n                    <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}else{%>\n                    <if test=\"${field.name} != null\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}%>\n            <%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"${g.codePackage}.dto.${g.entityName}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-14 15:07:21', null);
INSERT INTO `t_code_template_file` VALUES ('60', '55', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${g.entityName}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${g.entityName}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var baseColumnList = \'\';\n        for(field in t.fields){\n            baseColumnList = baseColumnList + field.fieldName + \',\';\n        }\n        if (strutil.length(baseColumnList) > 0) {\n            baseColumnList = strutil.subStringTo(baseColumnList,0,strutil.length(baseColumnList)-1);\n        }\n        %>\n        ${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${g.entityName}Map\"\n        type=\"${g.codePackage}.vo.${g.entityName}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        insert into ${g.tableName} (\n        ${sputil.join(fieldNames, \',\')}\n        )\n        values (\n        <%\n        var names = [];\n        for(field in t.fields){\n            array.add(names, \'#{\' + field.name + \'}\');\n        }\n        %>\n        ${sputil.join(names, \',\')}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${g.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        update ${g.tableName}\n        <set>\n            <%for(field in t.fields){%>\n                <%if (field.type == \'String\') {%>\n                    <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}else{%>\n                    <if test=\"${field.name} != null\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}%>\n            <%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"${g.codePackage}.dto.${g.entityName}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-14 15:11:51', null);
INSERT INTO `t_code_template_file` VALUES ('61', '56', 'package ${g.codePackage}.service;\n\nimport ${g.codePackage}.dto.${g.entityName}Dto;\nimport ${g.codePackage}.dto.PageQueryParam;\nimport ${g.codePackage}.vo.DbInfoVo;\nimport ${g.codePackage}.vo.Page;\n\n/**\n * ${g.name}\n * @author ${g.author}\n *\n */\npublic interface ${g.entityName}Service {\n\n    /**\n     * 添加\n     * @param ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto\n     */\n    void create(${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto);\n\n    /**\n     * 删除\n     * @param ${g.idName}\n     */\n    void delete(String ${g.idName});\n    \n    /**\n     * 更新\n     * @param ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto\n     */\n    void update(${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto);\n\n    /**\n     * 按主键查询\n     * @param ${g.idName}\n     * @return\n     */\n    DbInfoVo find(String ${g.idName});\n    \n    /**\n     * 查询\n     * @param ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto\n     * @param pageQueryParam\n     * @return\n     */\n    Page<DbInfoVo> query(${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto, PageQueryParam pageQueryParam);\n}\n', 'Java', '2018-05-14 15:59:05', null);
INSERT INTO `t_code_template_file` VALUES ('62', '57', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${g.entityName}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${g.entityName}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var baseColumnList = \'\';\n        for(field in t.fields){\n            baseColumnList = baseColumnList + field.fieldName + \',\';\n        }\n        if (strutil.length(baseColumnList) > 0) {\n            baseColumnList = strutil.subStringTo(baseColumnList,0,strutil.length(baseColumnList)-1);\n        }\n        %>\n        ${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${g.entityName}Map\"\n        type=\"${g.codePackage}.vo.${g.entityName}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        insert into ${g.tableName} (\n        ${baseColumnList}\n        )\n        values (\n        <%\n        var names = \'\';\n        for(field in t.fields){\n            names = names + \'#{\' + field.name + \'},\';\n        }\n        if (strutil.length(names) > 0) {\n            names = strutil.subStringTo(names,0,strutil.length(names)-1);\n        }\n        %>\n        ${names}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${g.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        update ${g.tableName}\n        <set>\n            <%for(field in t.fields){%>\n                <%if (field.type == \'String\') {%>\n                    <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}else{%>\n                    <if test=\"${field.name} != null\">\n                        AND ${strutil.toUpperCase(field.fieldName)} = #{${field.name}}\n                    </if>\n                <%}%>\n            <%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"${g.codePackage}.dto.${g.entityName}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-14 16:24:35', null);
INSERT INTO `t_code_template_file` VALUES ('63', '58', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${g.entityName}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${g.entityName}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var baseColumnList = \'\';\n        for(field in t.fields){\n            baseColumnList = baseColumnList + field.fieldName + \',\';\n        }\n        if (strutil.length(baseColumnList) > 0) {\n            baseColumnList = strutil.subStringTo(baseColumnList,0,strutil.length(baseColumnList)-1);\n        }\n        %>\n        ${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${g.entityName}Map\"\n        type=\"${g.codePackage}.vo.${g.entityName}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        insert into ${g.tableName} (\n        ${baseColumnList}\n        )\n        values (\n        <%\n        var names = \'\';\n        for(field in t.fields){\n            names = names + \'#{\' + field.name + \'},\';\n        }\n        if (strutil.length(names) > 0) {\n            names = strutil.subStringTo(names,0,strutil.length(names)-1);\n        }\n        %>\n        ${names}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${g.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        update ${g.tableName}\n        <set>\n<%for(field in t.fields){%>\n    <%if (field.type == \'String\') {%>\n        <if test=\"${field.name} != null and ${field.name} != \'\'\">\n            ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n        </if>\n    <%}else{%>\n        <if test=\"${field.name} != null\">\n            ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n        </if>\n    <%}%>\n<%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"${g.codePackage}.dto.${g.entityName}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-14 16:26:16', null);
INSERT INTO `t_code_template_file` VALUES ('65', '60', 'package ${g.codePackage}.entity;\n\nimport lombok.Getter;\nimport lombok.Setter;\nimport lombok.ToString;\n\n/**\n * ${g.name}：${g.tableName}\n * @author ${g.author}\n *\n */\n@Getter\n@Setter\n@ToString\npublic class ${g.entityName}Entity extends BaseEntity {\n\n<%for(field in t.fields){%>\n     /**\n     * ${field.chinaName}\n     */\n    private ${field.type} ${field.name};\n    \n<%}%>\n\n}\n', 'Java', '2018-05-16 09:24:18', null);
INSERT INTO `t_code_template_file` VALUES ('66', '61', 'package ${g.codePackage}.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.ModelAttribute;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport ${g.codePackage}.dto.${g.entityName}Dto;\nimport ${g.codePackage}.dto.PageQueryParam;\nimport ${g.codePackage}.service.${g.entityName}Service;\nimport ${g.codePackage}.vo.${g.entityName}Vo;\nimport ${g.codePackage}.vo.Page;\nimport ${g.codePackage}.vo.ResultVo;\n\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\n\n/**\n * ${g.name}\n * @author ${g.author}\n *\n */\n@Api(tags=\"${g.name}\")\n@RestController\n@RequestMapping(\"/${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}\")\npublic class ${g.entityName}Controller {\n\n    @Autowired\n    private ${g.entityName}Service ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service;\n    \n    @ApiOperation(\"添加\")\n    @RequestMapping(method = RequestMethod.POST)\n    public ResultVo<?> create(@RequestBody ${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto) {\n        ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.create(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto);\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"删除\")\n    @RequestMapping(value = \"/{${g.idName}}\", method = RequestMethod.DELETE)\n    public ResultVo<?> delete(@PathVariable(\"${g.idName}\") String ${g.idName}) {\n        ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.delete(${g.idName});\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"更新\")\n    @RequestMapping(method = RequestMethod.PUT)\n    public ResultVo<?> update(@RequestBody ${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto) {\n        ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.update(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto);\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"分页查询${g.name}\")\n    @RequestMapping(method=RequestMethod.GET)\n    public ResultVo<?> query(@ModelAttribute ${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto, @ModelAttribute PageQueryParam pageQueryParam) {\n        Page<${g.entityName}Vo> page = ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.query(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto, pageQueryParam);\n        return ResultVo.buildSuccessResult(page);\n    }\n\n    @ApiOperation(\"${g.name}详情\")\n    @RequestMapping(value=\"/{${g.idName}}\", method=RequestMethod.GET)\n    public ResultVo<?> detail(@PathVariable(\"${g.idName}\") String ${g.idName}) {\n        return ResultVo.buildSuccessResult(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Service.find(${g.idName}));\n    }\n\n}\n', 'Java', '2018-05-16 09:30:59', null);
INSERT INTO `t_code_template_file` VALUES ('67', '62', 'package ${g.codePackage}.dto;\n\nimport io.swagger.annotations.ApiModelProperty;\nimport lombok.Getter;\nimport lombok.Setter;\nimport lombok.ToString;\n\n/**\n * ${g.name}\n * @author ${g.author}\n *\n */\n@Getter\n@Setter\n@ToString\npublic class ${g.entityName}Dto {\n\n<%for(field in t.fields){%>\n     /**\n     * ${field.chinaName}\n     */\n     @ApiModelProperty(\"${field.chinaName}\")\n    private ${field.type} ${field.name};\n    \n<%}%>\n\n}\n', 'Java', '2018-05-16 09:31:17', null);
INSERT INTO `t_code_template_file` VALUES ('68', '63', 'package ${g.codePackage}.entity;\n\nimport lombok.Getter;\nimport lombok.Setter;\nimport lombok.ToString;\n\n/**\n * ${t.chinaName}：${t.tableName}\n * @author ${g.author}\n *\n */\n@Getter\n@Setter\n@ToString\npublic class ${g.entityName}Entity extends BaseEntity {\n\n<%for(field in t.fields){%>\n     /**\n     * ${field.chinaName}\n     */\n    private ${field.type} ${field.name};\n    \n<%}%>\n\n}\n', 'Java', '2018-05-16 09:31:38', null);
INSERT INTO `t_code_template_file` VALUES ('69', '64', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${g.entityName}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${g.entityName}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var baseColumnList = \'\';\n        for(field in t.fields){\n            baseColumnList = baseColumnList + field.fieldName + \',\';\n        }\n        if (strutil.length(baseColumnList) > 0) {\n            baseColumnList = strutil.subStringTo(baseColumnList,0,strutil.length(baseColumnList)-1);\n        }\n        %>\n        ${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${g.entityName}Map\"\n        type=\"${g.codePackage}.vo.${g.entityName}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        insert into ${g.tableName} (\n        ${baseColumnList}\n        )\n        values (\n        <%\n        var names = \'\';\n        for(field in t.fields){\n            names = names + \'#{\' + field.name + \'},\';\n        }\n        if (strutil.length(names) > 0) {\n            names = strutil.subStringTo(names,0,strutil.length(names)-1);\n        }\n        %>\n        ${names}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${g.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${g.entityName}Entity\">\n        update ${g.tableName}\n        <set>\n    <%for(field in t.fields){%>\n        <%if (field.type == \'String\') {%>\n            <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}else{%>\n            <if test=\"${field.name} != null\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}%>\n    <%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${g.entityName}Map\"\n        parameterType=\"${g.codePackage}.dto.${g.entityName}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-16 09:32:08', null);
INSERT INTO `t_code_template_file` VALUES ('70', '65', 'package ${g.codePackage}.mapper;\n\nimport java.util.List;\n\nimport org.apache.ibatis.annotations.Mapper;\n\nimport ${g.codePackage}.dto.${g.entityName}Dto;\nimport ${g.codePackage}.entity.${g.entityName}Entity;\nimport ${g.codePackage}.vo.${g.entityName}Vo;\n\n@Mapper\npublic interface ${g.entityName}Mapper {\n    \n    /**\n     * 添加\n     * @param ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Entity\n     * @return\n     */\n    int insert(${g.entityName}Entity ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Entity);\n\n    /**\n     * 删除\n     * @param ${g.idName}\n     * @return \n     */\n    int deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}(String ${g.idName});\n    \n    /**\n     * 更新\n     * @param ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Entity\n     * @return\n     */\n    int updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}(${g.entityName}Entity ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Entity);\n\n    /**\n     * 按主键查询\n     * @param ${g.idName}\n     * @return\n     */\n    ${g.entityName}Vo selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}(String ${g.idName});\n    \n    /**\n     * 查询\n     * @param ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto\n     * @return\n     */\n    List<${g.entityName}Vo> select(${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto);\n}', 'Java', '2018-05-16 09:32:22', null);
INSERT INTO `t_code_template_file` VALUES ('71', '66', 'package ${g.codePackage}.service.impl;\n\nimport java.util.List;\n\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.beans.BeanUtils;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport ${g.codePackage}.dto.${g.entityName}Dto;\nimport ${g.codePackage}.dto.PageQueryParam;\nimport ${g.codePackage}.entity.${g.entityName}Entity;\nimport ${g.codePackage}.exception.BizException;\nimport ${g.codePackage}.exception.DataBaseException;\nimport ${g.codePackage}.exception.entity.AppErrorCode;\nimport ${g.codePackage}.exception.entity.SimpleErrorCode;\nimport ${g.codePackage}.mapper.${g.entityName}Mapper;\nimport ${g.codePackage}.service.${g.entityName}Service;\nimport ${g.codePackage}.util.PageUtil;\nimport ${g.codePackage}.util.uuid.UUIDStringGenerator;\nimport ${g.codePackage}.vo.${g.entityName}Vo;\nimport ${g.codePackage}.vo.Page;\n\n/**\n * ${g.name}\n * @author ${g.author}\n *\n */\n@Service\npublic class ${g.entityName}ServiceImpl implements ${g.entityName}Service {\n\n    @Autowired\n    private ${g.entityName}Mapper ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Mapper;\n\n    @Autowired\n    private UUIDStringGenerator uuIDStringGenerator;\n    \n    @Transactional\n    @Override\n    public void create(${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto) {\n        ${g.entityName}Entity ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Entity = new ${g.entityName}Entity();\n        BeanUtils.copyProperties(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto, ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Entity);\n        \n        // 添加主键\n        ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Entity.set${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}(uuIDStringGenerator.nextUUID());\n        \n        int result = ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Mapper.insert(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Entity);\n        \n        // 添加失败\n        if (result < 1) {\n            throw new DataBaseException(SimpleErrorCode.InsertFailure);\n        }\n    }\n\n    @Transactional\n    @Override\n    public void delete(String ${g.idName}) {\n        // 检查数据是否存在\n        ${g.entityName}Vo ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Vo = ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Mapper.selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}(${g.idName});\n        if (${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Vo == null) {\n            throw new DataBaseException(SimpleErrorCode.DataNotExisted);\n        }\n        \n        int result = ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Mapper.deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}(${g.idName});\n\n        // 删除失败\n        if (result < 1) {\n            throw new DataBaseException(SimpleErrorCode.DeleteFailure);\n        }\n    }\n\n    @Transactional\n    @Override\n    public void update(${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto) {\n        // 检查主键是否为空\n        if (StringUtils.isEmpty(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto.get${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}())) {\n            throw new BizException(AppErrorCode.PrimaryKeyIsNull);\n        }\n        \n        // 检查数据是否存在\n        ${g.entityName}Vo ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Vo = ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Mapper.selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto.get${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}());\n        if (${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Vo == null) {\n            throw new DataBaseException(SimpleErrorCode.DataNotExisted);\n        }\n        \n        ${g.entityName}Entity ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Entity = new ${g.entityName}Entity();\n        BeanUtils.copyProperties(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto, ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Entity);\n        \n        int result = ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Mapper.updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Entity);\n\n        // 更新失败\n        if (result < 1) {\n            throw new DataBaseException(SimpleErrorCode.UpdateFailure);\n        }\n    }\n\n    @Override\n    public ${g.entityName}Vo find(String ${g.idName}) {\n        return ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Mapper.selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}(${g.idName});\n    }\n\n    @Override\n    public Page<${g.entityName}Vo> query(${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto, PageQueryParam pageQueryParam) {\n        // 分页和排序\n        PageUtil.pageAndOrderBy(pageQueryParam, ${g.entityName}Dto.class);\n        \n        List<${g.entityName}Vo> ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Volist = ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Mapper.select(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto);        \n        return PageUtil.getPage(${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Volist);\n    }\n\n}\n', 'Java', '2018-05-16 09:32:39', null);
INSERT INTO `t_code_template_file` VALUES ('72', '67', 'package ${g.codePackage}.service;\n\nimport ${g.codePackage}.dto.${g.entityName}Dto;\nimport ${g.codePackage}.dto.PageQueryParam;\nimport ${g.codePackage}.vo.${g.entityName}Vo;\nimport ${g.codePackage}.vo.Page;\n\n/**\n * ${g.name}\n * @author ${g.author}\n *\n */\npublic interface ${g.entityName}Service {\n\n    /**\n     * 添加\n     * @param ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto\n     */\n    void create(${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto);\n\n    /**\n     * 删除\n     * @param ${g.idName}\n     */\n    void delete(String ${g.idName});\n    \n    /**\n     * 更新\n     * @param ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto\n     */\n    void update(${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto);\n\n    /**\n     * 按主键查询\n     * @param ${g.idName}\n     * @return\n     */\n    ${g.entityName}Vo find(String ${g.idName});\n    \n    /**\n     * 查询\n     * @param ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto\n     * @param pageQueryParam\n     * @return\n     */\n    Page<${g.entityName}Vo> query(${g.entityName}Dto ${strutil.toLowerCase(strutil.subStringTo (g.entityName,0,1))}${strutil.subString  (g.entityName,1)}Dto, PageQueryParam pageQueryParam);\n}\n', 'Java', '2018-05-16 09:32:54', null);
INSERT INTO `t_code_template_file` VALUES ('73', '68', 'package ${g.codePackage}.vo;\n\nimport lombok.Getter;\nimport lombok.Setter;\nimport lombok.ToString;\n\n/**\n * ${g.name}\n * @author ${g.author}\n *\n */\n@Getter\n@Setter\n@ToString\npublic class ${g.entityName}Vo {\n\n<%for(field in t.fields){%>\n     /**\n     * ${field.chinaName}\n     */\n    private ${field.type} ${field.name};\n    \n<%}%>\n\n}\n', 'Java', '2018-05-16 09:33:08', null);
INSERT INTO `t_code_template_file` VALUES ('74', '69', 'package ${g.codePackage}.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.ModelAttribute;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport ${g.codePackage}.dto.${t.name}Dto;\nimport ${g.codePackage}.dto.PageQueryParam;\nimport ${g.codePackage}.service.${t.name}Service;\nimport ${g.codePackage}.vo.${t.name}Vo;\nimport ${g.codePackage}.vo.Page;\nimport ${g.codePackage}.vo.ResultVo;\n\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\n\n/**\n * ${t.chinaName}\n * @author ${g.author}\n *\n */\n@Api(tags=\"${t.chinaName}\")\n@RestController\n@RequestMapping(\"/${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}\")\npublic class ${t.name}Controller {\n\n    @Autowired\n    private ${t.name}Service ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Service;\n    \n    @ApiOperation(\"添加\")\n    @RequestMapping(method = RequestMethod.POST)\n    public ResultVo<?> create(@RequestBody ${t.name}Dto ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto) {\n        ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Service.create(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto);\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"删除\")\n    @RequestMapping(value = \"/{${g.idName}}\", method = RequestMethod.DELETE)\n    public ResultVo<?> delete(@PathVariable(\"${g.idName}\") String ${g.idName}) {\n        ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Service.delete(${g.idName});\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"更新\")\n    @RequestMapping(method = RequestMethod.PUT)\n    public ResultVo<?> update(@RequestBody ${t.name}Dto ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto) {\n        ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Service.update(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto);\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"分页查询${g.name}\")\n    @RequestMapping(method=RequestMethod.GET)\n    public ResultVo<?> query(@ModelAttribute ${t.name}Dto ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto, @ModelAttribute PageQueryParam pageQueryParam) {\n        Page<${t.name}Vo> page = ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Service.query(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto, pageQueryParam);\n        return ResultVo.buildSuccessResult(page);\n    }\n\n    @ApiOperation(\"${g.name}详情\")\n    @RequestMapping(value=\"/{${g.idName}}\", method=RequestMethod.GET)\n    public ResultVo<?> detail(@PathVariable(\"${g.idName}\") String ${g.idName}) {\n        return ResultVo.buildSuccessResult(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Service.find(${g.idName}));\n    }\n\n}\n', 'Java', '2018-05-16 09:35:45', null);
INSERT INTO `t_code_template_file` VALUES ('75', '70', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${t.name}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${t.name}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var baseColumnList = \'\';\n        for(field in t.fields){\n            baseColumnList = baseColumnList + field.fieldName + \',\';\n        }\n        if (strutil.length(baseColumnList) > 0) {\n            baseColumnList = strutil.subStringTo(baseColumnList,0,strutil.length(baseColumnList)-1);\n        }\n        %>\n        ${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${t.name}Map\"\n        type=\"${g.codePackage}.vo.${t.name}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        insert into ${g.tableName} (\n        ${baseColumnList}\n        )\n        values (\n        <%\n        var names = \'\';\n        for(field in t.fields){\n            names = names + \'#{\' + field.name + \'},\';\n        }\n        if (strutil.length(names) > 0) {\n            names = strutil.subStringTo(names,0,strutil.length(names)-1);\n        }\n        %>\n        ${names}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${g.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        update ${g.tableName}\n        <set>\n    <%for(field in t.fields){%>\n        <%if (field.type == \'String\') {%>\n            <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}else{%>\n            <if test=\"${field.name} != null\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}%>\n    <%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${t.name}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${t.name}Map\"\n        parameterType=\"${g.codePackage}.dto.${t.name}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${g.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-16 09:40:21', null);
INSERT INTO `t_code_template_file` VALUES ('76', '71', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${t.name}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${t.name}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var baseColumnList = \'\';\n        for(field in t.fields){\n            baseColumnList = baseColumnList + field.fieldName + \',\';\n        }\n        if (strutil.length(baseColumnList) > 0) {\n            baseColumnList = strutil.subStringTo(baseColumnList,0,strutil.length(baseColumnList)-1);\n        }\n        %>\n        ${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${t.name}Map\"\n        type=\"${g.codePackage}.vo.${t.name}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        insert into ${t.tableName} (\n        ${baseColumnList}\n        )\n        values (\n        <%\n        var names = \'\';\n        for(field in t.fields){\n            names = names + \'#{\' + field.name + \'},\';\n        }\n        if (strutil.length(names) > 0) {\n            names = strutil.subStringTo(names,0,strutil.length(names)-1);\n        }\n        %>\n        ${names}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" parameterType=\"java.lang.String\">\n        delete from ${t.tableName}\n        where ID = #{${g.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        update ${t.tableName}\n        <set>\n    <%for(field in t.fields){%>\n        <%if (field.type == \'String\') {%>\n            <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}else{%>\n            <if test=\"${field.name} != null\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}%>\n    <%}%>\n        </set>\n        where ID = #{${g.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}\" resultMap=\"${t.name}Map\"\n        parameterType=\"java.lang.String\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n        where ID = #{${g.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${t.name}Map\"\n        parameterType=\"${g.codePackage}.dto.${t.name}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-16 14:10:29', null);
INSERT INTO `t_code_template_file` VALUES ('77', '72', 'package ${g.codePackage}.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.ModelAttribute;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport ${g.codePackage}.dto.${t.name}Dto;\nimport ${g.codePackage}.dto.PageQueryParam;\nimport ${g.codePackage}.service.${t.name}Service;\nimport ${g.codePackage}.vo.${t.name}Vo;\nimport ${g.codePackage}.vo.Page;\nimport ${g.codePackage}.vo.ResultVo;\n\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\n\n/**\n * ${t.chinaName}\n * @author ${g.author}\n *\n */\n@Api(tags=\"${t.chinaName}\")\n@RestController\n@RequestMapping(\"/${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}\")\npublic class ${t.name}Controller {\n\n    @Autowired\n    private ${t.name}Service ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Service;\n    \n    @ApiOperation(\"添加\")\n    @RequestMapping(method = RequestMethod.POST)\n    public ResultVo<?> create(@RequestBody ${t.name}Dto ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto) {\n        ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Service.create(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto);\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"删除\")\n    @RequestMapping(value = \"/{${g.idName}}\", method = RequestMethod.DELETE)\n    public ResultVo<?> delete(@PathVariable(\"${g.idName}\") String ${g.idName}) {\n        ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Service.delete(${g.idName});\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"更新\")\n    @RequestMapping(method = RequestMethod.PUT)\n    public ResultVo<?> update(@RequestBody ${t.name}Dto ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto) {\n        ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Service.update(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto);\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"分页查询${t.chinaName}\")\n    @RequestMapping(method=RequestMethod.GET)\n    public ResultVo<?> query(@ModelAttribute ${t.name}Dto ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto, @ModelAttribute PageQueryParam pageQueryParam) {\n        Page<${t.name}Vo> page = ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Service.query(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto, pageQueryParam);\n        return ResultVo.buildSuccessResult(page);\n    }\n\n    @ApiOperation(\"${t.chinaName}详情\")\n    @RequestMapping(value=\"/{${g.idName}}\", method=RequestMethod.GET)\n    public ResultVo<?> detail(@PathVariable(\"${g.idName}\") String ${g.idName}) {\n        return ResultVo.buildSuccessResult(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Service.find(${g.idName}));\n    }\n\n}\n', 'Java', '2018-05-16 14:10:48', null);
INSERT INTO `t_code_template_file` VALUES ('78', '73', 'package ${g.codePackage}.dto;\n\nimport io.swagger.annotations.ApiModelProperty;\nimport lombok.Getter;\nimport lombok.Setter;\nimport lombok.ToString;\n\n/**\n * ${t.chinaName}\n * @author ${g.author}\n *\n */\n@Getter\n@Setter\n@ToString\npublic class ${t.name}Dto {\n\n<%for(field in t.fields){%>\n     /**\n     * ${field.chinaName}\n     */\n     @ApiModelProperty(\"${field.chinaName}\")\n    private ${field.type} ${field.name};\n    \n<%}%>\n\n}\n', 'Java', '2018-05-16 14:11:03', null);
INSERT INTO `t_code_template_file` VALUES ('79', '74', 'package ${g.codePackage}.entity;\n\nimport lombok.Getter;\nimport lombok.Setter;\nimport lombok.ToString;\n\n/**\n * ${t.chinaName}：${t.tableName}\n * @author ${g.author}\n *\n */\n@Getter\n@Setter\n@ToString\npublic class ${t.name}Entity extends BaseEntity {\n\n<%for(field in t.fields){%>\n     /**\n     * ${field.chinaName}\n     */\n    private ${field.type} ${field.name};\n    \n<%}%>\n\n}\n', 'Java', '2018-05-16 14:11:18', null);
INSERT INTO `t_code_template_file` VALUES ('80', '75', 'package ${g.codePackage}.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.ModelAttribute;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport ${g.codePackage}.dto.${t.name}Dto;\nimport ${g.codePackage}.dto.PageQueryParam;\nimport ${g.codePackage}.service.${t.name}Service;\nimport ${g.codePackage}.vo.${t.name}Vo;\nimport ${g.codePackage}.vo.Page;\nimport ${g.codePackage}.vo.ResultVo;\n\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\n\n/**\n * ${t.chinaName}\n * @author ${g.author}\n *\n */\n@Api(tags=\"${t.chinaName}\")\n@RestController\n@RequestMapping(\"/${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}\")\npublic class ${t.name}Controller {\n\n    @Autowired\n    private ${t.name}Service ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Service;\n    \n    @ApiOperation(\"添加\")\n    @RequestMapping(method = RequestMethod.POST)\n    public ResultVo<?> create(@RequestBody ${t.name}Dto ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto) {\n        ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Service.create(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto);\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"删除\")\n    @RequestMapping(value = \"/{${t.idName}}\", method = RequestMethod.DELETE)\n    public ResultVo<?> delete(@PathVariable(\"${t.idName}\") ${t.idType} ${t.idName}) {\n        ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Service.delete(${t.idName});\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"更新\")\n    @RequestMapping(method = RequestMethod.PUT)\n    public ResultVo<?> update(@RequestBody ${t.name}Dto ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto) {\n        ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Service.update(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto);\n        return ResultVo.buildSuccessResult();\n    }\n\n    @ApiOperation(\"分页查询${t.chinaName}\")\n    @RequestMapping(method=RequestMethod.GET)\n    public ResultVo<?> query(@ModelAttribute ${t.name}Dto ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto, @ModelAttribute PageQueryParam pageQueryParam) {\n        Page<${t.name}Vo> page = ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Service.query(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto, pageQueryParam);\n        return ResultVo.buildSuccessResult(page);\n    }\n\n    @ApiOperation(\"${t.chinaName}详情\")\n    @RequestMapping(value=\"/{${t.idName}}\", method=RequestMethod.GET)\n    public ResultVo<?> detail(@PathVariable(\"${t.idName}\") ${t.idType} ${t.idName}) {\n        return ResultVo.buildSuccessResult(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Service.find(${t.idName}));\n    }\n\n}\n', 'Xml', '2018-05-16 14:11:35', null);
INSERT INTO `t_code_template_file` VALUES ('81', '76', 'package ${g.codePackage}.mapper;\n\nimport java.util.List;\n\nimport org.apache.ibatis.annotations.Mapper;\n\nimport ${g.codePackage}.dto.${t.name}Dto;\nimport ${g.codePackage}.entity.${t.name}Entity;\nimport ${g.codePackage}.vo.${t.name}Vo;\n\n/**\n * ${t.chinaName}\n * @author ${g.author}\n *\n */\n@Mapper\npublic interface ${t.name}Mapper {\n    \n    /**\n     * 添加\n     * @param ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Entity\n     * @return\n     */\n    int insert(${t.name}Entity ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Entity);\n\n    /**\n     * 删除\n     * @param ${g.idName}\n     * @return \n     */\n    int deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}(String ${g.idName});\n    \n    /**\n     * 更新\n     * @param ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Entity\n     * @return\n     */\n    int updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}(${t.name}Entity ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Entity);\n\n    /**\n     * 按主键查询\n     * @param ${g.idName}\n     * @return\n     */\n    ${t.name}Vo selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}(String ${g.idName});\n    \n    /**\n     * 查询\n     * @param ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto\n     * @return\n     */\n    List<${t.name}Vo> select(${t.name}Dto ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto);\n}', 'Java', '2018-05-16 14:11:49', null);
INSERT INTO `t_code_template_file` VALUES ('82', '77', 'package ${g.codePackage}.service.impl;\n\nimport java.util.List;\n\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.beans.BeanUtils;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport ${g.codePackage}.dto.${t.name}Dto;\nimport ${g.codePackage}.dto.PageQueryParam;\nimport ${g.codePackage}.entity.${t.name}Entity;\nimport ${g.codePackage}.exception.BizException;\nimport ${g.codePackage}.exception.DataBaseException;\nimport ${g.codePackage}.exception.entity.AppErrorCode;\nimport ${g.codePackage}.exception.entity.SimpleErrorCode;\nimport ${g.codePackage}.mapper.${t.name}Mapper;\nimport ${g.codePackage}.service.${t.name}Service;\nimport ${g.codePackage}.util.PageUtil;\nimport ${g.codePackage}.util.uuid.UUIDStringGenerator;\nimport ${g.codePackage}.vo.${t.name}Vo;\nimport ${g.codePackage}.vo.Page;\n\n/**\n * ${t.chinaName}\n * @author ${g.author}\n *\n */\n@Service\npublic class ${t.name}ServiceImpl implements ${t.name}Service {\n\n    @Autowired\n    private ${t.name}Mapper ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Mapper;\n\n    @Autowired\n    private UUIDStringGenerator uuIDStringGenerator;\n    \n    @Transactional\n    @Override\n    public void create(${t.name}Dto ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto) {\n        ${t.name}Entity ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Entity = new ${t.name}Entity();\n        BeanUtils.copyProperties(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto, ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Entity);\n        \n        // 添加主键\n        ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Entity.set${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}(uuIDStringGenerator.nextUUID());\n        \n        int result = ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Mapper.insert(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Entity);\n        \n        // 添加失败\n        if (result < 1) {\n            throw new DataBaseException(SimpleErrorCode.InsertFailure);\n        }\n    }\n\n    @Transactional\n    @Override\n    public void delete(String ${g.idName}) {\n        // 检查数据是否存在\n        ${t.name}Vo ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Vo = ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Mapper.selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}(${g.idName});\n        if (${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Vo == null) {\n            throw new DataBaseException(SimpleErrorCode.DataNotExisted);\n        }\n        \n        int result = ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Mapper.deleteBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}(${g.idName});\n\n        // 删除失败\n        if (result < 1) {\n            throw new DataBaseException(SimpleErrorCode.DeleteFailure);\n        }\n    }\n\n    @Transactional\n    @Override\n    public void update(${t.name}Dto ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto) {\n        // 检查主键是否为空\n        if (StringUtils.isEmpty(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto.get${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}())) {\n            throw new BizException(AppErrorCode.PrimaryKeyIsNull);\n        }\n        \n        // 检查数据是否存在\n        ${t.name}Vo ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Vo = ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Mapper.selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto.get${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}());\n        if (${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Vo == null) {\n            throw new DataBaseException(SimpleErrorCode.DataNotExisted);\n        }\n        \n        ${t.name}Entity ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Entity = new ${t.name}Entity();\n        BeanUtils.copyProperties(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto, ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Entity);\n        \n        int result = ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Mapper.updateBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Entity);\n\n        // 更新失败\n        if (result < 1) {\n            throw new DataBaseException(SimpleErrorCode.UpdateFailure);\n        }\n    }\n\n    @Override\n    public ${t.name}Vo find(String ${g.idName}) {\n        return ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Mapper.selectBy${strutil.toUpperCase(strutil.subStringTo (g.idName,0,1))}${strutil.subString  (g.idName,1)}(${g.idName});\n    }\n\n    @Override\n    public Page<${t.name}Vo> query(${t.name}Dto ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto, PageQueryParam pageQueryParam) {\n        // 分页和排序\n        PageUtil.pageAndOrderBy(pageQueryParam, ${t.name}Dto.class);\n        \n        List<${t.name}Vo> ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Volist = ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Mapper.select(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto);        \n        return PageUtil.getPage(${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Volist);\n    }\n\n}\n', 'Java', '2018-05-16 14:12:05', null);
INSERT INTO `t_code_template_file` VALUES ('83', '78', 'package ${g.codePackage}.service;\n\nimport ${g.codePackage}.dto.${t.name}Dto;\nimport ${g.codePackage}.dto.PageQueryParam;\nimport ${g.codePackage}.vo.${t.name}Vo;\nimport ${g.codePackage}.vo.Page;\n\n/**\n * ${t.chinaName}\n * @author ${g.author}\n *\n */\npublic interface ${t.name}Service {\n\n    /**\n     * 添加\n     * @param ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto\n     */\n    void create(${t.name}Dto ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto);\n\n    /**\n     * 删除\n     * @param ${g.idName}\n     */\n    void delete(String ${g.idName});\n    \n    /**\n     * 更新\n     * @param ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto\n     */\n    void update(${t.name}Dto ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto);\n\n    /**\n     * 按主键查询\n     * @param ${g.idName}\n     * @return\n     */\n    ${t.name}Vo find(String ${g.idName});\n    \n    /**\n     * 查询\n     * @param ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto\n     * @param pageQueryParam\n     * @return\n     */\n    Page<${t.name}Vo> query(${t.name}Dto ${strutil.toLowerCase(strutil.subStringTo (t.name,0,1))}${strutil.subString  (t.name,1)}Dto, PageQueryParam pageQueryParam);\n}\n', 'Java', '2018-05-16 14:12:19', null);
INSERT INTO `t_code_template_file` VALUES ('84', '79', 'package ${g.codePackage}.vo;\n\nimport lombok.Getter;\nimport lombok.Setter;\nimport lombok.ToString;\n\n/**\n * ${t.chinaName}\n * @author ${g.author}\n *\n */\n@Getter\n@Setter\n@ToString\npublic class ${t.name}Vo {\n\n<%for(field in t.fields){%>\n     /**\n     * ${field.chinaName}\n     */\n    private ${field.type} ${field.name};\n    \n<%}%>\n\n}\n', 'Java', '2018-05-16 14:12:33', null);
INSERT INTO `t_code_template_file` VALUES ('85', '80', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${t.name}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${t.name}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.isKey != null && field.isKey.intValue() == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var baseColumnList = \'\';\n        for(field in t.fields){\n            baseColumnList = baseColumnList + field.fieldName + \',\';\n        }\n        if (strutil.length(baseColumnList) > 0) {\n            baseColumnList = strutil.subStringTo(baseColumnList,0,strutil.length(baseColumnList)-1);\n        }\n        %>\n        ${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${t.name}Map\"\n        type=\"${g.codePackage}.vo.${t.name}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        insert into ${t.tableName} (\n        ${baseColumnList}\n        )\n        values (\n        <%\n        var names = \'\';\n        for(field in t.fields){\n            names = names + \'#{\' + field.name + \'},\';\n        }\n        if (strutil.length(names) > 0) {\n            names = strutil.subStringTo(names,0,strutil.length(names)-1);\n        }\n        %>\n        ${names}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" parameterType=\"${t.idType}\">\n        delete from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        update ${t.tableName}\n        <set>\n    <%for(field in t.fields){%>\n        <%if (strutil.contain(field.type,\'java.lang.String\')) {%>\n            <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}else{%>\n            <if test=\"${field.name} != null\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}%>\n    <%}%>\n        </set>\n        where ${t.idFieldName} = #{${t.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" resultMap=\"${t.name}Map\"\n        parameterType=\"${t.idType}\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${t.name}Map\"\n        parameterType=\"${g.codePackage}.dto.${t.name}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-16 14:26:33', null);
INSERT INTO `t_code_template_file` VALUES ('86', '81', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${t.name}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${t.name}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.key != null && field.key.intValue() == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var baseColumnList = \'\';\n        for(field in t.fields){\n            baseColumnList = baseColumnList + field.fieldName + \',\';\n        }\n        if (strutil.length(baseColumnList) > 0) {\n            baseColumnList = strutil.subStringTo(baseColumnList,0,strutil.length(baseColumnList)-1);\n        }\n        %>\n        ${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${t.name}Map\"\n        type=\"${g.codePackage}.vo.${t.name}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        insert into ${t.tableName} (\n        ${baseColumnList}\n        )\n        values (\n        <%\n        var names = \'\';\n        for(field in t.fields){\n            names = names + \'#{\' + field.name + \'},\';\n        }\n        if (strutil.length(names) > 0) {\n            names = strutil.subStringTo(names,0,strutil.length(names)-1);\n        }\n        %>\n        ${names}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" parameterType=\"${t.idType}\">\n        delete from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        update ${t.tableName}\n        <set>\n    <%for(field in t.fields){%>\n        <%if (strutil.contain(field.type,\'java.lang.String\')) {%>\n            <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}else{%>\n            <if test=\"${field.name} != null\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}%>\n    <%}%>\n        </set>\n        where ${t.idFieldName} = #{${t.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" resultMap=\"${t.name}Map\"\n        parameterType=\"${t.idType}\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${t.name}Map\"\n        parameterType=\"${g.codePackage}.dto.${t.name}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-16 14:27:55', null);
INSERT INTO `t_code_template_file` VALUES ('87', '82', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${t.name}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${t.name}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.getKey() != null && field.getKey().intValue() == 2) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var baseColumnList = \'\';\n        for(field in t.fields){\n            baseColumnList = baseColumnList + field.fieldName + \',\';\n        }\n        if (strutil.length(baseColumnList) > 0) {\n            baseColumnList = strutil.subStringTo(baseColumnList,0,strutil.length(baseColumnList)-1);\n        }\n        %>\n        ${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${t.name}Map\"\n        type=\"${g.codePackage}.vo.${t.name}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        insert into ${t.tableName} (\n        ${baseColumnList}\n        )\n        values (\n        <%\n        var names = \'\';\n        for(field in t.fields){\n            names = names + \'#{\' + field.name + \'},\';\n        }\n        if (strutil.length(names) > 0) {\n            names = strutil.subStringTo(names,0,strutil.length(names)-1);\n        }\n        %>\n        ${names}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" parameterType=\"${t.idType}\">\n        delete from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        update ${t.tableName}\n        <set>\n    <%for(field in t.fields){%>\n        <%if (strutil.contain(field.type,\'java.lang.String\')) {%>\n            <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}else{%>\n            <if test=\"${field.name} != null\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}%>\n    <%}%>\n        </set>\n        where ${t.idFieldName} = #{${t.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" resultMap=\"${t.name}Map\"\n        parameterType=\"${t.idType}\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${t.name}Map\"\n        parameterType=\"${g.codePackage}.dto.${t.name}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-16 14:31:02', null);
INSERT INTO `t_code_template_file` VALUES ('88', '83', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${t.name}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${t.name}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.fieldName == t.idFieldName) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var baseColumnList = \'\';\n        for(field in t.fields){\n            baseColumnList = baseColumnList + field.fieldName + \',\';\n        }\n        if (strutil.length(baseColumnList) > 0) {\n            baseColumnList = strutil.subStringTo(baseColumnList,0,strutil.length(baseColumnList)-1);\n        }\n        %>\n        ${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${t.name}Map\"\n        type=\"${g.codePackage}.vo.${t.name}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        insert into ${t.tableName} (\n        ${baseColumnList}\n        )\n        values (\n        <%\n        var names = \'\';\n        for(field in t.fields){\n            names = names + \'#{\' + field.name + \'},\';\n        }\n        if (strutil.length(names) > 0) {\n            names = strutil.subStringTo(names,0,strutil.length(names)-1);\n        }\n        %>\n        ${names}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" parameterType=\"${t.idType}\">\n        delete from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        update ${t.tableName}\n        <set>\n    <%for(field in t.fields){%>\n        <%if (strutil.contain(field.type,\'java.lang.String\')) {%>\n            <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}else{%>\n            <if test=\"${field.name} != null\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}%>\n    <%}%>\n        </set>\n        where ${t.idFieldName} = #{${t.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" resultMap=\"${t.name}Map\"\n        parameterType=\"${t.idType}\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${t.name}Map\"\n        parameterType=\"${g.codePackage}.dto.${t.name}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-16 21:50:21', null);
INSERT INTO `t_code_template_file` VALUES ('89', '84', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${t.name}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${t.name}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.fieldName == t.idFieldName) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" jdbcType=\"${field.jdbcType}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" jdbcType=\"${field.jdbcType}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var baseColumnList = \'\';\n        for(field in t.fields){\n            baseColumnList = baseColumnList + field.fieldName + \',\';\n        }\n        if (strutil.length(baseColumnList) > 0) {\n            baseColumnList = strutil.subStringTo(baseColumnList,0,strutil.length(baseColumnList)-1);\n        }\n        %>\n        ${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${t.name}Map\"\n        type=\"${g.codePackage}.vo.${t.name}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        insert into ${t.tableName} (\n        ${baseColumnList}\n        )\n        values (\n        <%\n        var names = \'\';\n        for(field in t.fields){\n            names = names + \'#{\' + field.name + \'},\';\n        }\n        if (strutil.length(names) > 0) {\n            names = strutil.subStringTo(names,0,strutil.length(names)-1);\n        }\n        %>\n        ${names}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" parameterType=\"${t.idType}\">\n        delete from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        update ${t.tableName}\n        <set>\n    <%for(field in t.fields){%>\n        <%if (strutil.contain(field.type,\'java.lang.String\')) {%>\n            <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}else{%>\n            <if test=\"${field.name} != null\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}%>\n    <%}%>\n        </set>\n        where ${t.idFieldName} = #{${t.idName}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" resultMap=\"${t.name}Map\"\n        parameterType=\"${t.idType}\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${t.name}Map\"\n        parameterType=\"${g.codePackage}.dto.${t.name}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-16 22:05:14', null);
INSERT INTO `t_code_template_file` VALUES ('90', '85', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${t.name}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${t.name}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.fieldName == t.idFieldName) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" jdbcType=\"${field.jdbcType}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" jdbcType=\"${field.jdbcType}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var baseColumnList = \'\';\n        for(field in t.fields){\n            baseColumnList = baseColumnList + field.fieldName + \',\\n\\n\';\n        }\n        if (strutil.length(baseColumnList) > 0) {\n            baseColumnList = strutil.subStringTo(baseColumnList,0,strutil.length(baseColumnList)-1);\n        }\n        %>\n        ${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${t.name}Map\"\n        type=\"${g.codePackage}.vo.${t.name}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        insert into ${t.tableName} (\n        ${baseColumnList}\n        )\n        values (\n        <%\n        var names = \'\';\n        for(field in t.fields){\n            names = names + \'#{\' + field.name + \',,jdbcType=\' + field.jdbcType + \'},\\n\\n\';\n        }\n        if (strutil.length(names) > 0) {\n            names = strutil.subStringTo(names,0,strutil.length(names)-1);\n        }\n        %>\n        ${names}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" parameterType=\"${t.idType}\">\n        delete from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName}, jdbcType=${t.idJdbcType}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        update ${t.tableName}\n        <set>\n    <%for(field in t.fields){%>\n        <%if (strutil.contain(field.type,\'java.lang.String\')) {%>\n            <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}else{%>\n            <if test=\"${field.name} != null\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}%>\n    <%}%>\n        </set>\n        where ${t.idFieldName} = #{${t.idName}, jdbcType=${t.idJdbcType}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" resultMap=\"${t.name}Map\"\n        parameterType=\"${t.idType}\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName}, jdbcType=${t.idJdbcType}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${t.name}Map\"\n        parameterType=\"${g.codePackage}.dto.${t.name}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-16 22:07:34', null);
INSERT INTO `t_code_template_file` VALUES ('91', '86', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${t.name}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${t.name}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.fieldName == t.idFieldName) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" jdbcType=\"${field.jdbcType}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" jdbcType=\"${field.jdbcType}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var baseColumnList = \'\';\n        for(field in t.fields){\n            baseColumnList = baseColumnList + field.fieldName + \',\\n\\n\';\n        }\n        if (strutil.length(baseColumnList) > 0) {\n            baseColumnList = strutil.subStringTo(baseColumnList,0,strutil.length(baseColumnList)-1);\n        }\n        %>\n        ${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${t.name}Map\"\n        type=\"${g.codePackage}.vo.${t.name}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        insert into ${t.tableName} (\n        ${baseColumnList}\n        )\n        values (\n        <%\n        var names = \'\';\n        for(field in t.fields){\n            names = names + \'#{\' + field.name + \',,jdbcType=\' + field.jdbcType + \'},\\n\\n\';\n        }\n        if (strutil.length(names) > 0) {\n            names = strutil.subStringTo(names,0,strutil.length(names)-1);\n        }\n        %>\n        ${names}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" parameterType=\"${t.idType}\">\n        delete from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName}, jdbcType=${t.idJdbcType}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        update ${t.tableName}\n        <set>\n    <%for(field in t.fields){%>\n        <%if (strutil.contain(field.type,\'java.lang.String\')) {%>\n            <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}else{%>\n            <if test=\"${field.name} != null\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}%>\n    <%}%>\n        </set>\n        where ${t.idFieldName} = #{${t.idName}, jdbcType=${t.idJdbcType}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" resultMap=\"${t.name}Map\"\n        parameterType=\"${t.idType}\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName}, jdbcType=${t.idJdbcType}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${t.name}Map\"\n        parameterType=\"${g.codePackage}.dto.${t.name}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-16 22:12:51', null);
INSERT INTO `t_code_template_file` VALUES ('92', '87', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${t.name}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${t.name}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.fieldName == t.idFieldName) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" jdbcType=\"${field.jdbcType}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" jdbcType=\"${field.jdbcType}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n    <sql id=\"Base_Column_List\">\n        <%\n        var baseColumnList = \'\';\n        for(field in t.fields){\n            baseColumnList = baseColumnList + field.fieldName + \',\\n\\t\\t\';\n        }\n        if (strutil.length(baseColumnList) > 0) {\n            baseColumnList = strutil.subStringTo(baseColumnList,0,strutil.length(baseColumnList)-1);\n        }\n        %>\n        ${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${t.name}Map\"\n        type=\"${g.codePackage}.vo.${t.name}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        insert into ${t.tableName} (\n        ${baseColumnList}\n        )\n        values (\n        <%\n        var names = \'\';\n        for(field in t.fields){\n            names = names + \'#{\' + field.name + \',jdbcType=\' + field.jdbcType + \'},\\n\\t\\t\';\n        }\n        if (strutil.length(names) > 0) {\n            names = strutil.subStringTo(names,0,strutil.length(names)-1);\n        }\n        %>\n        ${names}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" parameterType=\"${t.idType}\">\n        delete from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName},jdbcType=${t.idJdbcType}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        update ${t.tableName}\n        <set>\n    <%for(field in t.fields){%>\n        <%if (strutil.contain(field.type,\'java.lang.String\')) {%>\n            <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}else{%>\n            <if test=\"${field.name} != null\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}%>\n    <%}%>\n        </set>\n        where ${t.idFieldName} = #{${t.idName},jdbcType=${t.idJdbcType}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" resultMap=\"${t.name}Map\"\n        parameterType=\"${t.idType}\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName},jdbcType=${t.idJdbcType}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${t.name}Map\"\n        parameterType=\"${g.codePackage}.dto.${t.name}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-16 22:18:06', null);
INSERT INTO `t_code_template_file` VALUES ('93', '88', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${t.name}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${t.name}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.fieldName == t.idFieldName) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" jdbcType=\"${field.jdbcType}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" jdbcType=\"${field.jdbcType}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n<%\nvar baseColumnList = \'\';\nfor(field in t.fields){\n    baseColumnList = baseColumnList + \'\\n\\t\\t\' + field.fieldName + \',\';\n}\nif (strutil.length(baseColumnList) > 0) {\n    baseColumnList = strutil.subStringTo(baseColumnList,0,strutil.length(baseColumnList)-1);\n}\n%>\n\n    <sql id=\"Base_Column_List\">${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${t.name}Map\"\n        type=\"${g.codePackage}.vo.${t.name}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n<%\nvar names = \'\';\nfor(field in t.fields){\n    names = names + ‘\\n\\t\\t’ + \'#{\' + field.name + \',jdbcType=\' + field.jdbcType + \'},\';\n}\nif (strutil.length(names) > 0) {\n    names = strutil.subStringTo(names,0,strutil.length(names)-1);\n}\n%>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        insert into ${t.tableName} (\n        ${baseColumnList}\n        )\n        values (${names}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" parameterType=\"${t.idType}\">\n        delete from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName},jdbcType=${t.idJdbcType}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        update ${t.tableName}\n        <set>\n    <%for(field in t.fields){%>\n        <%if (strutil.contain(field.type,\'java.lang.String\')) {%>\n            <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}else{%>\n            <if test=\"${field.name} != null\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}%>\n    <%}%>\n        </set>\n        where ${t.idFieldName} = #{${t.idName},jdbcType=${t.idJdbcType}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" resultMap=\"${t.name}Map\"\n        parameterType=\"${t.idType}\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName},jdbcType=${t.idJdbcType}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${t.name}Map\"\n        parameterType=\"${g.codePackage}.dto.${t.name}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-16 22:20:01', null);
INSERT INTO `t_code_template_file` VALUES ('94', '89', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper\n    namespace=\"${g.codePackage}.mapper.${t.name}Mapper\">\n\n    <resultMap id=\"BaseResultMap\"\n        type=\"${g.codePackage}.entity.${t.name}Entity\">\n<%for(field in t.fields){%>\n    <%if (field.fieldName == t.idFieldName) {%>\n        <id column=\"${field.fieldName}\" property=\"${field.name}\" jdbcType=\"${field.jdbcType}\" />\n    <%}else{%>\n        <result column=\"${field.fieldName}\" property=\"${field.name}\" jdbcType=\"${field.jdbcType}\" />\n    <%}%>\n<%}%>\n    </resultMap>\n\n<%\nvar baseColumnList = \'\';\nfor(field in t.fields){\n    baseColumnList = baseColumnList + \'\\n\\t\\t\' + field.fieldName + \',\';\n}\nif (strutil.length(baseColumnList) > 0) {\n    baseColumnList = strutil.subStringTo(baseColumnList,0,strutil.length(baseColumnList)-1);\n}\n%>\n\n    <sql id=\"Base_Column_List\">${baseColumnList}\n    </sql>\n    \n    <resultMap id=\"${t.name}Map\"\n        type=\"${g.codePackage}.vo.${t.name}Vo\" extends=\"BaseResultMap\">\n        \n    </resultMap>\n\n<%\nvar names = \'\';\nfor(field in t.fields){\n    names = names + \'\\n\\t\\t\' + \'#{\' + field.name + \',jdbcType=\' + field.jdbcType + \'},\';\n}\nif (strutil.length(names) > 0) {\n    names = strutil.subStringTo(names,0,strutil.length(names)-1);\n}\n%>\n\n    <!-- 添加 -->\n    <insert id=\"insert\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        insert into ${t.tableName} (\n        ${baseColumnList}\n        )\n        values (${names}\n        )\n    </insert>\n\n    <!-- 删除 -->\n    <delete id=\"deleteBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" parameterType=\"${t.idType}\">\n        delete from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName},jdbcType=${t.idJdbcType}}\n    </delete>\n\n    <!-- 更新 -->\n    <update id=\"updateBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\"\n        parameterType=\"${g.codePackage}.entity.${t.name}Entity\">\n        update ${t.tableName}\n        <set>\n    <%for(field in t.fields){%>\n        <%if (strutil.contain(field.type,\'java.lang.String\')) {%>\n            <if test=\"${field.name} != null and ${field.name} != \'\'\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}else{%>\n            <if test=\"${field.name} != null\">\n                ${strutil.toUpperCase(field.fieldName)} = #{${field.name}},\n            </if>\n        <%}%>\n    <%}%>\n        </set>\n        where ${t.idFieldName} = #{${t.idName},jdbcType=${t.idJdbcType}}\n    </update>\n\n    <!-- 按主键查询 -->\n    <select id=\"selectBy${strutil.toUpperCase(strutil.subStringTo (t.idName,0,1))}${strutil.subString  (t.idName,1)}\" resultMap=\"${t.name}Map\"\n        parameterType=\"${t.idType}\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n        where ${t.idFieldName} = #{${t.idName},jdbcType=${t.idJdbcType}}\n    </select>\n    \n    <!-- 查询 -->\n    <select id=\"select\" resultMap=\"${t.name}Map\"\n        parameterType=\"${g.codePackage}.dto.${t.name}Dto\">\n        select\n        <include refid=\"Base_Column_List\" />\n        from ${t.tableName}\n    </select>\n\n</mapper>', 'Xml', '2018-05-16 22:22:36', null);
INSERT INTO `t_code_template_file` VALUES ('95', '90', 'package ${g.codePackage}.entity;\n\nimport lombok.Data\n\n/**\n * ${t.chinaName}：${t.tableName}\n * @author ${g.author}\n *\n */\n@Data\npublic class ${t.name}  {\n\n<%for(field in t.fields){%>\n     /**\n     * ${field.chinaName}\n     */\n    private ${field.type} ${field.name};\n    \n<%}%>\n\n}\n', 'Java', '2019-04-17 22:53:53', null);

-- ----------------------------
-- Table structure for t_code_template_group
-- ----------------------------
DROP TABLE IF EXISTS `t_code_template_group`;
CREATE TABLE `t_code_template_group` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `user_id` int(10) DEFAULT NULL COMMENT '用户ID',
  `name` varchar(10) NOT NULL COMMENT '组名称',
  `desc` varchar(400) DEFAULT NULL COMMENT '描述',
  `version` int(1) DEFAULT '1' COMMENT '版本 1 正常版本 2 历史版本',
  `share_status` int(2) NOT NULL DEFAULT '1' COMMENT '分享状态',
  `CRT_USER_ID` varchar(16) DEFAULT NULL COMMENT '创建人',
  `CRT_TIME` datetime DEFAULT NULL COMMENT '创建时间',
  `MDF_USER_ID` varchar(16) DEFAULT NULL COMMENT '修改人',
  `MDF_TIME` datetime DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='模板组';

-- ----------------------------
-- Records of t_code_template_group
-- ----------------------------
INSERT INTO `t_code_template_group` VALUES ('13', '1', 'SpringBoot', '微服务', '1', '1', '1', '2019-04-17 22:38:26', null, null);

-- ----------------------------
-- Table structure for t_code_template_share
-- ----------------------------
DROP TABLE IF EXISTS `t_code_template_share`;
CREATE TABLE `t_code_template_share` (
  `ID` varchar(32) NOT NULL,
  `Template_NAME` varchar(50) DEFAULT NULL COMMENT '模板名称',
  `Template_path` varchar(1000) DEFAULT NULL COMMENT '模板地址',
  `Template_effect` varchar(1000) DEFAULT NULL COMMENT '模板效果',
  `Template_DESC` varchar(1000) DEFAULT NULL,
  PRIMARY KEY (`ID`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='模板分享';

-- ----------------------------
-- Records of t_code_template_share
-- ----------------------------

-- ----------------------------
-- Table structure for t_system_dept
-- ----------------------------
DROP TABLE IF EXISTS `t_system_dept`;
CREATE TABLE `t_system_dept` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `num` int(11) DEFAULT NULL COMMENT '排序',
  `pid` int(11) DEFAULT NULL COMMENT '父部门id',
  `pids` varchar(255) DEFAULT NULL COMMENT '父级ids',
  `simplename` varchar(45) DEFAULT NULL COMMENT '简称',
  `fullname` varchar(255) DEFAULT NULL COMMENT '全称',
  `tips` varchar(255) DEFAULT NULL COMMENT '提示',
  `version` int(11) DEFAULT NULL COMMENT '版本（乐观锁保留字段）',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=29 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='部门表';

-- ----------------------------
-- Records of t_system_dept
-- ----------------------------
INSERT INTO `t_system_dept` VALUES ('24', '1', '0', '[0],', '智慧大学', '智慧大学', '', null);
INSERT INTO `t_system_dept` VALUES ('27', '4', '24', '[0],[24],', '产品部门', '产品部门', '', null);

-- ----------------------------
-- Table structure for t_system_dict
-- ----------------------------
DROP TABLE IF EXISTS `t_system_dict`;
CREATE TABLE `t_system_dict` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `num` int(11) DEFAULT NULL COMMENT '排序',
  `pid` int(11) DEFAULT NULL COMMENT '父级字典',
  `name` varchar(255) DEFAULT NULL COMMENT '名称',
  `tips` varchar(255) DEFAULT NULL COMMENT '提示',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=45 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='字典表';

-- ----------------------------
-- Records of t_system_dict
-- ----------------------------
INSERT INTO `t_system_dict` VALUES ('16', '0', '0', '状态', null);
INSERT INTO `t_system_dict` VALUES ('17', '1', '16', '启用', null);
INSERT INTO `t_system_dict` VALUES ('18', '2', '16', '禁用', null);
INSERT INTO `t_system_dict` VALUES ('29', '0', '0', '性别', null);
INSERT INTO `t_system_dict` VALUES ('30', '1', '29', '男', null);
INSERT INTO `t_system_dict` VALUES ('31', '2', '29', '女', null);
INSERT INTO `t_system_dict` VALUES ('35', '0', '0', '账号状态', null);
INSERT INTO `t_system_dict` VALUES ('36', '1', '35', '启用', null);
INSERT INTO `t_system_dict` VALUES ('37', '2', '35', '冻结', null);
INSERT INTO `t_system_dict` VALUES ('38', '3', '35', '已删除', null);
INSERT INTO `t_system_dict` VALUES ('42', '0', '0', '启用与否', null);
INSERT INTO `t_system_dict` VALUES ('43', '1', '42', '是', null);
INSERT INTO `t_system_dict` VALUES ('44', '2', '42', '否', null);

-- ----------------------------
-- Table structure for t_system_login_log
-- ----------------------------
DROP TABLE IF EXISTS `t_system_login_log`;
CREATE TABLE `t_system_login_log` (
  `id` int(65) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `logname` varchar(255) DEFAULT NULL COMMENT '日志名称',
  `userid` int(65) DEFAULT NULL COMMENT '管理员id',
  `createtime` datetime DEFAULT NULL COMMENT '创建时间',
  `succeed` varchar(255) DEFAULT NULL COMMENT '是否执行成功',
  `message` text COMMENT '具体消息',
  `ip` varchar(255) DEFAULT NULL COMMENT '登录ip',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='登录记录';

-- ----------------------------
-- Records of t_system_login_log
-- ----------------------------

-- ----------------------------
-- Table structure for t_system_menu
-- ----------------------------
DROP TABLE IF EXISTS `t_system_menu`;
CREATE TABLE `t_system_menu` (
  `id` int(65) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `code` varchar(255) DEFAULT NULL COMMENT '菜单编号',
  `pcode` varchar(255) DEFAULT NULL COMMENT '菜单父编号',
  `pcodes` varchar(255) DEFAULT NULL COMMENT '当前菜单的所有父菜单编号',
  `name` varchar(255) DEFAULT NULL COMMENT '菜单名称',
  `icon` varchar(255) DEFAULT NULL COMMENT '菜单图标',
  `url` varchar(255) DEFAULT NULL COMMENT 'url地址',
  `num` int(65) DEFAULT NULL COMMENT '菜单排序号',
  `levels` int(65) DEFAULT NULL COMMENT '菜单层级',
  `ismenu` int(11) DEFAULT NULL COMMENT '是否是菜单（1：是  0：不是）',
  `tips` varchar(255) DEFAULT NULL COMMENT '备注',
  `status` int(65) DEFAULT NULL COMMENT '菜单状态 :  1:启用   0:不启用',
  `isopen` int(11) DEFAULT NULL COMMENT '是否打开:    1:打开   0:不打开',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=203 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='菜单表';

-- ----------------------------
-- Records of t_system_menu
-- ----------------------------
INSERT INTO `t_system_menu` VALUES ('105', 'system', '0', '[0],', '系统管理', 'fa-user', '', '3', '1', '1', null, '1', '1');
INSERT INTO `t_system_menu` VALUES ('106', 'mgr', 'system', '[0],[system],', '用户管理', '', '/mgr', '1', '2', '1', null, '1', '0');
INSERT INTO `t_system_menu` VALUES ('107', 'mgr_add', 'mgr', '[0],[system],[mgr],', '添加用户', null, '/mgr/add', '1', '3', '0', null, '1', '0');
INSERT INTO `t_system_menu` VALUES ('108', 'mgr_edit', 'mgr', '[0],[system],[mgr],', '修改用户', null, '/mgr/edit', '2', '3', '0', null, '1', '0');
INSERT INTO `t_system_menu` VALUES ('109', 'mgr_delete', 'mgr', '[0],[system],[mgr],', '删除用户', null, '/mgr/delete', '3', '3', '0', null, '1', '0');
INSERT INTO `t_system_menu` VALUES ('110', 'mgr_reset', 'mgr', '[0],[system],[mgr],', '重置密码', null, '/mgr/reset', '4', '3', '0', null, '1', '0');
INSERT INTO `t_system_menu` VALUES ('111', 'mgr_freeze', 'mgr', '[0],[system],[mgr],', '冻结用户', null, '/mgr/freeze', '5', '3', '0', null, '1', '0');
INSERT INTO `t_system_menu` VALUES ('112', 'mgr_unfreeze', 'mgr', '[0],[system],[mgr],', '解除冻结用户', null, '/mgr/unfreeze', '6', '3', '0', null, '1', '0');
INSERT INTO `t_system_menu` VALUES ('113', 'mgr_setRole', 'mgr', '[0],[system],[mgr],', '分配角色', null, '/mgr/setRole', '7', '3', '0', null, '1', '0');
INSERT INTO `t_system_menu` VALUES ('114', 'role', 'system', '[0],[system],', '角色管理', null, '/role', '2', '2', '1', null, '1', '0');
INSERT INTO `t_system_menu` VALUES ('115', 'role_add', 'role', '[0],[system],[role],', '添加角色', null, '/role/add', '1', '3', '0', null, '1', '0');
INSERT INTO `t_system_menu` VALUES ('116', 'role_edit', 'role', '[0],[system],[role],', '修改角色', null, '/role/edit', '2', '3', '0', null, '1', '0');
INSERT INTO `t_system_menu` VALUES ('117', 'role_remove', 'role', '[0],[system],[role],', '删除角色', null, '/role/remove', '3', '3', '0', null, '1', '0');
INSERT INTO `t_system_menu` VALUES ('118', 'role_setAuthority', 'role', '[0],[system],[role],', '配置权限', null, '/role/setAuthority', '4', '3', '0', null, '1', '0');
INSERT INTO `t_system_menu` VALUES ('119', 'menu', 'system', '[0],[system],', '菜单管理', null, '/menu', '4', '2', '1', null, '1', '0');
INSERT INTO `t_system_menu` VALUES ('120', 'menu_add', 'menu', '[0],[system],[menu],', '添加菜单', null, '/menu/add', '1', '3', '0', null, '1', '0');
INSERT INTO `t_system_menu` VALUES ('121', 'menu_edit', 'menu', '[0],[system],[menu],', '修改菜单', null, '/menu/edit', '2', '3', '0', null, '1', '0');
INSERT INTO `t_system_menu` VALUES ('122', 'menu_remove', 'menu', '[0],[system],[menu],', '删除菜单', null, '/menu/remove', '3', '3', '0', null, '1', '0');
INSERT INTO `t_system_menu` VALUES ('128', 'log', 'system', '[0],[system],', '业务日志', null, '/log', '6', '2', '1', null, '1', '0');
INSERT INTO `t_system_menu` VALUES ('130', 'druid', 'system', '[0],[system],', '监控管理', null, '/druid', '7', '2', '1', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('131', 'dept', 'system', '[0],[system],', '部门管理', null, '/dept', '3', '2', '1', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('132', 'dict', 'system', '[0],[system],', '字典管理', null, '/dict', '4', '2', '1', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('133', 'loginLog', 'system', '[0],[system],', '登录日志', null, '/loginLog', '6', '2', '1', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('134', 'log_clean', 'log', '[0],[system],[log],', '清空日志', null, '/log/delLog', '3', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('135', 'dept_add', 'dept', '[0],[system],[dept],', '添加部门', null, '/dept/add', '1', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('136', 'dept_update', 'dept', '[0],[system],[dept],', '修改部门', null, '/dept/update', '1', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('137', 'dept_delete', 'dept', '[0],[system],[dept],', '删除部门', null, '/dept/delete', '1', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('138', 'dict_add', 'dict', '[0],[system],[dict],', '添加字典', null, '/dict/add', '1', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('139', 'dict_update', 'dict', '[0],[system],[dict],', '修改字典', null, '/dict/update', '1', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('140', 'dict_delete', 'dict', '[0],[system],[dict],', '删除字典', null, '/dict/delete', '1', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('141', 'notice', 'system', '[0],[system],', '通知管理', null, '/notice', '9', '2', '1', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('142', 'notice_add', 'notice', '[0],[system],[notice],', '添加通知', null, '/notice/add', '1', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('143', 'notice_update', 'notice', '[0],[system],[notice],', '修改通知', null, '/notice/update', '2', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('144', 'notice_delete', 'notice', '[0],[system],[notice],', '删除通知', null, '/notice/delete', '3', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('145', 'hello', '0', '[0],', '通知', 'fa-rocket', '/notice/hello', '0', '1', '1', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('150', 'to_menu_edit', 'menu', '[0],[system],[menu],', '菜单编辑跳转', '', '/menu/menu_edit', '4', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('151', 'menu_list', 'menu', '[0],[system],[menu],', '菜单列表', '', '/menu/list', '5', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('152', 'to_dept_update', 'dept', '[0],[system],[dept],', '修改部门跳转', '', '/dept/dept_update', '4', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('153', 'dept_list', 'dept', '[0],[system],[dept],', '部门列表', '', '/dept/list', '5', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('154', 'dept_detail', 'dept', '[0],[system],[dept],', '部门详情', '', '/dept/detail', '6', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('155', 'to_dict_edit', 'dict', '[0],[system],[dict],', '修改菜单跳转', '', '/dict/dict_edit', '4', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('156', 'dict_list', 'dict', '[0],[system],[dict],', '字典列表', '', '/dict/list', '5', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('157', 'dict_detail', 'dict', '[0],[system],[dict],', '字典详情', '', '/dict/detail', '6', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('158', 'log_list', 'log', '[0],[system],[log],', '日志列表', '', '/log/list', '2', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('159', 'log_detail', 'log', '[0],[system],[log],', '日志详情', '', '/log/detail', '3', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('160', 'del_login_log', 'loginLog', '[0],[system],[loginLog],', '清空登录日志', '', '/loginLog/delLoginLog', '1', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('161', 'login_log_list', 'loginLog', '[0],[system],[loginLog],', '登录日志列表', '', '/loginLog/list', '2', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('162', 'to_role_edit', 'role', '[0],[system],[role],', '修改角色跳转', '', '/role/role_edit', '5', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('163', 'to_role_assign', 'role', '[0],[system],[role],', '角色分配跳转', '', '/role/role_assign', '6', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('164', 'role_list', 'role', '[0],[system],[role],', '角色列表', '', '/role/list', '7', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('165', 'to_assign_role', 'mgr', '[0],[system],[mgr],', '分配角色跳转', '', '/mgr/role_assign', '8', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('166', 'to_user_edit', 'mgr', '[0],[system],[mgr],', '编辑用户跳转', '', '/mgr/user_edit', '9', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('167', 'mgr_list', 'mgr', '[0],[system],[mgr],', '用户列表', '', '/mgr/list', '10', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('168', 'easycode', '0', '[0],', '代码生成', 'fa-film', '/', '1', '1', '1', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('169', 'dbinfo_list', 'easycode', '[0],[easycode],', '数据库管理', '', '/dbinfo', '1', '2', '1', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('170', 'dbinfo_add', 'dbinfo_list', '[0],[easycode],[dbinfo_list],', '数据库新增', '', '/dbinfo/add', '1', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('171', 'dbinfo_update', 'dbinfo_list', '[0],[easycode],[dbinfo_list],', '数据库编辑', '', '/dbinfo/update', '2', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('172', 'dbinfo_delete', 'dbinfo_list', '[0],[easycode],[dbinfo_list],', '数据库删除', '', '/dbinfo/delete', '3', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('173', 'tableinfo_list', 'easycode', '[0],[easycode],', '表管理', '', '/tableinfo', '2', '2', '1', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('174', 'tableinfo_add', 'tableinfo_list', '[0],[easycode],[tableinfo_list],', '表新增', '', '/tableinfo/add', '1', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('175', 'tableinfo_update', 'tableinfo_list', '[0],[easycode],[tableinfo_list],', '表编辑', '', '/tableinfo/update', '2', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('176', 'tableinfo_delete', 'tableinfo_list', '[0],[easycode],[tableinfo_list],', '表删除', '', '/tableinfo/delete', '3', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('181', 'template_list', 'easycode', '[0],[easycode],', '模板管理', '', '/template', '3', '2', '1', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('182', 'template_add', 'template_list', '[0],[easycode],[template_list],', '模板新增', '', '/template/add', '1', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('183', 'template_update', 'template_list', '[0],[easycode],[template_list],', '模板编辑', '', '/template/update', '2', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('184', 'template_delete', 'template_list', '[0],[easycode],[template_list],', '模板删除', '', '/template/delete', '3', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('185', 'templateshare_list', 'easycode', '[0],[easycode],', '分享管理', '', '/templateshare', '4', '2', '1', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('186', 'templateshare_add', 'templateshare_list', '[0],[easycode],[templateshare_list],', '分享新增', '', '/templateshare/add', '1', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('187', 'templateshare_update', 'templateshare_list', '[0],[easycode],[templateshare_list],', '分享编辑', '', '/templateshare/update', '2', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('188', 'templateshare_delete', 'templateshare_list', '[0],[easycode],[templateshare_list],', '分享删除', '', '/templateshare/delete', '3', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('189', 'templategroup_list', 'easycode', '[0],[easycode],', '模板组管理', '', '/templategroup', '5', '2', '1', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('190', 'templategroup_add', 'templategroup_list', '[0],[easycode],[templategroup_list],', '模板组新增', '', '/templategroup/add', '1', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('191', 'templategroup_update', 'templategroup_list', '[0],[easycode],[templategroup_list],', '模板组编辑', '', '/templategroup/update', '2', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('192', 'templategroup_delete', 'templategroup_list', '[0],[easycode],[templategroup_list],', '模板组删除', '', '/templategroup/delete', '3', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('193', 'genparam_list', 'easycode', '[0],[easycode],', '参数管理', '', '/genparam', '6', '2', '1', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('194', 'genparam_add', 'genparam_list', '[0],[easycode],[genparam_list],', '参数新增', '', '/genparam/add', '1', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('195', 'genparam_update', 'genparam_list', '[0],[easycode],[genparam_list],', '参数编辑', '', '/genparam/update', '2', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('196', 'genparam_delete', 'genparam_list', '[0],[easycode],[genparam_list],', '参数删除', '', '/genparam/delete', '3', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('197', 'code_gen', 'easycode', '[0],[easycode],', '代码生成', '', '/code', '8', '2', '1', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('198', 'tableinfo_dbimport', 'tableinfo_list', '[0],[easycode],[tableinfo_list],', 'DB导入', '', '/tableinfo/dbimport', '4', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('199', 'tableinfo_sqlimport', 'tableinfo_list', '[0],[easycode],[tableinfo_list],', 'SQL导出', '', '/tableinfo/sqlimport', '5', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('200', 'templategroup_share', 'templategroup_list', '[0],[easycode],[templategroup_list],', '模板组分享', '', '/templategroup/share', '4', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('201', 'template_history', 'template_list', '[0],[easycode],[template_list],', '模板历史', '', '/template/history', '4', '3', '0', null, '1', null);
INSERT INTO `t_system_menu` VALUES ('202', 'tableinfo_codegen', 'tableinfo_list', '[0],[easycode],[tableinfo_list],', '生成', '', '/tableinfo/codegen', '6', '3', '0', null, '1', null);

-- ----------------------------
-- Table structure for t_system_notice
-- ----------------------------
DROP TABLE IF EXISTS `t_system_notice`;
CREATE TABLE `t_system_notice` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `title` varchar(255) DEFAULT NULL COMMENT '标题',
  `type` int(11) DEFAULT NULL COMMENT '类型',
  `content` text COMMENT '内容',
  `createtime` datetime DEFAULT NULL COMMENT '创建时间',
  `creater` int(11) DEFAULT NULL COMMENT '创建人',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='通知表';

-- ----------------------------
-- Records of t_system_notice
-- ----------------------------
INSERT INTO `t_system_notice` VALUES ('8', '上线', null, '<p>代码生成系统正式上线！</p>', '2017-05-10 19:28:57', '1');

-- ----------------------------
-- Table structure for t_system_operation_log
-- ----------------------------
DROP TABLE IF EXISTS `t_system_operation_log`;
CREATE TABLE `t_system_operation_log` (
  `id` int(65) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `logtype` varchar(255) DEFAULT NULL COMMENT '日志类型',
  `logname` varchar(255) DEFAULT NULL COMMENT '日志名称',
  `userid` int(65) DEFAULT NULL COMMENT '用户id',
  `classname` varchar(255) DEFAULT NULL COMMENT '类名称',
  `method` text COMMENT '方法名称',
  `createtime` datetime DEFAULT NULL COMMENT '创建时间',
  `succeed` varchar(255) DEFAULT NULL COMMENT '是否成功',
  `message` text COMMENT '备注',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='操作日志';

-- ----------------------------
-- Records of t_system_operation_log
-- ----------------------------

-- ----------------------------
-- Table structure for t_system_relation
-- ----------------------------
DROP TABLE IF EXISTS `t_system_relation`;
CREATE TABLE `t_system_relation` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `menuid` int(11) DEFAULT NULL COMMENT '菜单id',
  `roleid` int(11) DEFAULT NULL COMMENT '角色id',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4651 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='角色和菜单关联表';

-- ----------------------------
-- Records of t_system_relation
-- ----------------------------
INSERT INTO `t_system_relation` VALUES ('4546', '105', '1');
INSERT INTO `t_system_relation` VALUES ('4547', '106', '1');
INSERT INTO `t_system_relation` VALUES ('4548', '107', '1');
INSERT INTO `t_system_relation` VALUES ('4549', '108', '1');
INSERT INTO `t_system_relation` VALUES ('4550', '109', '1');
INSERT INTO `t_system_relation` VALUES ('4551', '110', '1');
INSERT INTO `t_system_relation` VALUES ('4552', '111', '1');
INSERT INTO `t_system_relation` VALUES ('4553', '112', '1');
INSERT INTO `t_system_relation` VALUES ('4554', '113', '1');
INSERT INTO `t_system_relation` VALUES ('4555', '165', '1');
INSERT INTO `t_system_relation` VALUES ('4556', '166', '1');
INSERT INTO `t_system_relation` VALUES ('4557', '167', '1');
INSERT INTO `t_system_relation` VALUES ('4558', '114', '1');
INSERT INTO `t_system_relation` VALUES ('4559', '115', '1');
INSERT INTO `t_system_relation` VALUES ('4560', '116', '1');
INSERT INTO `t_system_relation` VALUES ('4561', '117', '1');
INSERT INTO `t_system_relation` VALUES ('4562', '118', '1');
INSERT INTO `t_system_relation` VALUES ('4563', '162', '1');
INSERT INTO `t_system_relation` VALUES ('4564', '163', '1');
INSERT INTO `t_system_relation` VALUES ('4565', '164', '1');
INSERT INTO `t_system_relation` VALUES ('4566', '119', '1');
INSERT INTO `t_system_relation` VALUES ('4567', '120', '1');
INSERT INTO `t_system_relation` VALUES ('4568', '121', '1');
INSERT INTO `t_system_relation` VALUES ('4569', '122', '1');
INSERT INTO `t_system_relation` VALUES ('4570', '150', '1');
INSERT INTO `t_system_relation` VALUES ('4571', '151', '1');
INSERT INTO `t_system_relation` VALUES ('4572', '128', '1');
INSERT INTO `t_system_relation` VALUES ('4573', '134', '1');
INSERT INTO `t_system_relation` VALUES ('4574', '158', '1');
INSERT INTO `t_system_relation` VALUES ('4575', '159', '1');
INSERT INTO `t_system_relation` VALUES ('4576', '130', '1');
INSERT INTO `t_system_relation` VALUES ('4577', '131', '1');
INSERT INTO `t_system_relation` VALUES ('4578', '135', '1');
INSERT INTO `t_system_relation` VALUES ('4579', '136', '1');
INSERT INTO `t_system_relation` VALUES ('4580', '137', '1');
INSERT INTO `t_system_relation` VALUES ('4581', '152', '1');
INSERT INTO `t_system_relation` VALUES ('4582', '153', '1');
INSERT INTO `t_system_relation` VALUES ('4583', '154', '1');
INSERT INTO `t_system_relation` VALUES ('4584', '132', '1');
INSERT INTO `t_system_relation` VALUES ('4585', '138', '1');
INSERT INTO `t_system_relation` VALUES ('4586', '139', '1');
INSERT INTO `t_system_relation` VALUES ('4587', '140', '1');
INSERT INTO `t_system_relation` VALUES ('4588', '155', '1');
INSERT INTO `t_system_relation` VALUES ('4589', '156', '1');
INSERT INTO `t_system_relation` VALUES ('4590', '157', '1');
INSERT INTO `t_system_relation` VALUES ('4591', '133', '1');
INSERT INTO `t_system_relation` VALUES ('4592', '160', '1');
INSERT INTO `t_system_relation` VALUES ('4593', '161', '1');
INSERT INTO `t_system_relation` VALUES ('4594', '141', '1');
INSERT INTO `t_system_relation` VALUES ('4595', '142', '1');
INSERT INTO `t_system_relation` VALUES ('4596', '143', '1');
INSERT INTO `t_system_relation` VALUES ('4597', '144', '1');
INSERT INTO `t_system_relation` VALUES ('4598', '145', '1');
INSERT INTO `t_system_relation` VALUES ('4599', '168', '1');
INSERT INTO `t_system_relation` VALUES ('4600', '169', '1');
INSERT INTO `t_system_relation` VALUES ('4601', '170', '1');
INSERT INTO `t_system_relation` VALUES ('4602', '171', '1');
INSERT INTO `t_system_relation` VALUES ('4603', '172', '1');
INSERT INTO `t_system_relation` VALUES ('4604', '173', '1');
INSERT INTO `t_system_relation` VALUES ('4605', '174', '1');
INSERT INTO `t_system_relation` VALUES ('4606', '175', '1');
INSERT INTO `t_system_relation` VALUES ('4607', '176', '1');
INSERT INTO `t_system_relation` VALUES ('4608', '198', '1');
INSERT INTO `t_system_relation` VALUES ('4609', '199', '1');
INSERT INTO `t_system_relation` VALUES ('4610', '202', '1');
INSERT INTO `t_system_relation` VALUES ('4611', '181', '1');
INSERT INTO `t_system_relation` VALUES ('4612', '182', '1');
INSERT INTO `t_system_relation` VALUES ('4613', '183', '1');
INSERT INTO `t_system_relation` VALUES ('4614', '184', '1');
INSERT INTO `t_system_relation` VALUES ('4615', '201', '1');
INSERT INTO `t_system_relation` VALUES ('4616', '189', '1');
INSERT INTO `t_system_relation` VALUES ('4617', '190', '1');
INSERT INTO `t_system_relation` VALUES ('4618', '191', '1');
INSERT INTO `t_system_relation` VALUES ('4619', '192', '1');
INSERT INTO `t_system_relation` VALUES ('4620', '200', '1');
INSERT INTO `t_system_relation` VALUES ('4621', '193', '1');
INSERT INTO `t_system_relation` VALUES ('4622', '194', '1');
INSERT INTO `t_system_relation` VALUES ('4623', '195', '1');
INSERT INTO `t_system_relation` VALUES ('4624', '196', '1');
INSERT INTO `t_system_relation` VALUES ('4625', '145', '7');
INSERT INTO `t_system_relation` VALUES ('4626', '168', '7');
INSERT INTO `t_system_relation` VALUES ('4627', '169', '7');
INSERT INTO `t_system_relation` VALUES ('4628', '170', '7');
INSERT INTO `t_system_relation` VALUES ('4629', '171', '7');
INSERT INTO `t_system_relation` VALUES ('4630', '172', '7');
INSERT INTO `t_system_relation` VALUES ('4631', '173', '7');
INSERT INTO `t_system_relation` VALUES ('4632', '174', '7');
INSERT INTO `t_system_relation` VALUES ('4633', '175', '7');
INSERT INTO `t_system_relation` VALUES ('4634', '176', '7');
INSERT INTO `t_system_relation` VALUES ('4635', '198', '7');
INSERT INTO `t_system_relation` VALUES ('4636', '199', '7');
INSERT INTO `t_system_relation` VALUES ('4637', '181', '7');
INSERT INTO `t_system_relation` VALUES ('4638', '182', '7');
INSERT INTO `t_system_relation` VALUES ('4639', '183', '7');
INSERT INTO `t_system_relation` VALUES ('4640', '184', '7');
INSERT INTO `t_system_relation` VALUES ('4641', '201', '7');
INSERT INTO `t_system_relation` VALUES ('4642', '189', '7');
INSERT INTO `t_system_relation` VALUES ('4643', '190', '7');
INSERT INTO `t_system_relation` VALUES ('4644', '191', '7');
INSERT INTO `t_system_relation` VALUES ('4645', '192', '7');
INSERT INTO `t_system_relation` VALUES ('4646', '200', '7');
INSERT INTO `t_system_relation` VALUES ('4647', '193', '7');
INSERT INTO `t_system_relation` VALUES ('4648', '194', '7');
INSERT INTO `t_system_relation` VALUES ('4649', '195', '7');
INSERT INTO `t_system_relation` VALUES ('4650', '196', '7');

-- ----------------------------
-- Table structure for t_system_role
-- ----------------------------
DROP TABLE IF EXISTS `t_system_role`;
CREATE TABLE `t_system_role` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `num` int(11) DEFAULT NULL COMMENT '序号',
  `pid` int(11) DEFAULT NULL COMMENT '父角色id',
  `name` varchar(255) DEFAULT NULL COMMENT '角色名称',
  `deptid` int(11) DEFAULT NULL COMMENT '部门名称',
  `tips` varchar(255) DEFAULT NULL COMMENT '提示',
  `version` int(11) DEFAULT NULL COMMENT '保留字段(暂时没用）',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='角色表';

-- ----------------------------
-- Records of t_system_role
-- ----------------------------
INSERT INTO `t_system_role` VALUES ('1', '1', '0', '超级管理员', '24', 'administrator', '1');
INSERT INTO `t_system_role` VALUES ('7', '2', '1', '开发人员', '24', '开发人员', null);

-- ----------------------------
-- Table structure for t_system_user
-- ----------------------------
DROP TABLE IF EXISTS `t_system_user`;
CREATE TABLE `t_system_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `avatar` varchar(255) DEFAULT NULL COMMENT '头像',
  `account` varchar(45) DEFAULT NULL COMMENT '账号',
  `password` varchar(45) DEFAULT NULL COMMENT '密码',
  `salt` varchar(45) DEFAULT NULL COMMENT 'md5密码盐',
  `name` varchar(45) DEFAULT NULL COMMENT '名字',
  `birthday` datetime DEFAULT NULL COMMENT '生日',
  `sex` int(11) DEFAULT NULL COMMENT '性别（1：男 2：女）',
  `email` varchar(45) DEFAULT NULL COMMENT '电子邮件',
  `phone` varchar(45) DEFAULT NULL COMMENT '电话',
  `roleid` varchar(255) DEFAULT NULL COMMENT '角色id',
  `deptid` int(11) DEFAULT NULL COMMENT '部门id',
  `status` int(11) DEFAULT NULL COMMENT '状态(1：启用  2：冻结  3：删除）',
  `createtime` datetime DEFAULT NULL COMMENT '创建时间',
  `version` int(11) DEFAULT NULL COMMENT '保留字段',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=84 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='管理员表';

-- ----------------------------
-- Records of t_system_user
-- ----------------------------
INSERT INTO `t_system_user` VALUES ('1', '', 'admin', '6c0359f2fc2565ebf1ba7934a5004bfb', '8pgby', '管理员', '2018-01-01 00:00:00', '1', '', '', '1', '24', '1', '2016-01-29 08:49:53', '25');
INSERT INTO `t_system_user` VALUES ('83', null, '15219890524', '7cbb1153341d68b504586e99bb29928a', 'uxd57', '凌玉旺', null, '1', 'lingyuwang@ly-sky.com', '15219890524', '7', '27', '3', '2018-05-14 17:36:40', null);
